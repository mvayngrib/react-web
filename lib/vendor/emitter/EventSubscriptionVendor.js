
















'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();

var _invariant=require('fbjs/lib/invariant');var _invariant2=_interopRequireDefault(_invariant);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var





EventSubscriptionVendor=function(){

function EventSubscriptionVendor(){_classCallCheck(this,EventSubscriptionVendor);
this._subscriptionsForType={};
this._currentSubscription=null;
}_createClass(EventSubscriptionVendor,[{key:'addSubscription',value:function addSubscription(








eventType,subscription){
(0,_invariant2.default)(
subscription.subscriber===this,
'The subscriber of the subscription is incorrectly set.');
if(!this._subscriptionsForType[eventType]){
this._subscriptionsForType[eventType]=[];
}
var key=this._subscriptionsForType[eventType].length;
this._subscriptionsForType[eventType].push(subscription);
subscription.eventType=eventType;
subscription.key=key;
return subscription;
}},{key:'removeAllSubscriptions',value:function removeAllSubscriptions(







eventType){
if(eventType===undefined){
this._subscriptionsForType={};
}else{
delete this._subscriptionsForType[eventType];
}
}},{key:'removeSubscription',value:function removeSubscription(







subscription){
var eventType=subscription.eventType;
var key=subscription.key;

var subscriptionsForType=this._subscriptionsForType[eventType];
if(subscriptionsForType){
delete subscriptionsForType[key];
}
}},{key:'getSubscriptionsForType',value:function getSubscriptionsForType(













eventType){
return this._subscriptionsForType[eventType];
}}]);return EventSubscriptionVendor;}();


module.exports=EventSubscriptionVendor;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkV2ZW50U3Vic2NyaXB0aW9uVmVuZG9yLmpzIl0sIm5hbWVzIjpbIkV2ZW50U3Vic2NyaXB0aW9uVmVuZG9yIiwiX3N1YnNjcmlwdGlvbnNGb3JUeXBlIiwiX2N1cnJlbnRTdWJzY3JpcHRpb24iLCJldmVudFR5cGUiLCJzdWJzY3JpcHRpb24iLCJzdWJzY3JpYmVyIiwia2V5IiwibGVuZ3RoIiwicHVzaCIsInVuZGVmaW5lZCIsInN1YnNjcmlwdGlvbnNGb3JUeXBlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsYTs7QUFFQSw2Qzs7Ozs7O0FBTU1BLHVCOztBQUVKLGtDQUFjO0FBQ1osS0FBS0MscUJBQUwsQ0FBNkIsRUFBN0I7QUFDQSxLQUFLQyxvQkFBTCxDQUE0QixJQUE1QjtBQUNELEM7Ozs7Ozs7OztBQVNDQyxTLENBQW1CQyxZLENBQW9EO0FBQ3ZFO0FBQ0VBLGFBQWFDLFVBQWIsR0FBNEIsSUFEOUI7QUFFRSx3REFGRjtBQUdBLEdBQUksQ0FBQyxLQUFLSixxQkFBTCxDQUEyQkUsU0FBM0IsQ0FBTCxDQUE0QztBQUMxQyxLQUFLRixxQkFBTCxDQUEyQkUsU0FBM0IsRUFBd0MsRUFBeEM7QUFDRDtBQUNELEdBQUlHLEtBQU0sS0FBS0wscUJBQUwsQ0FBMkJFLFNBQTNCLEVBQXNDSSxNQUFoRDtBQUNBLEtBQUtOLHFCQUFMLENBQTJCRSxTQUEzQixFQUFzQ0ssSUFBdEMsQ0FBMkNKLFlBQTNDO0FBQ0FBLGFBQWFELFNBQWIsQ0FBeUJBLFNBQXpCO0FBQ0FDLGFBQWFFLEdBQWIsQ0FBbUJBLEdBQW5CO0FBQ0EsTUFBT0YsYUFBUDtBQUNELEM7Ozs7Ozs7O0FBUXNCRCxTLENBQW9CO0FBQ3pDLEdBQUlBLFlBQWNNLFNBQWxCLENBQTZCO0FBQzNCLEtBQUtSLHFCQUFMLENBQTZCLEVBQTdCO0FBQ0QsQ0FGRCxJQUVPO0FBQ0wsTUFBTyxNQUFLQSxxQkFBTCxDQUEyQkUsU0FBM0IsQ0FBUDtBQUNEO0FBQ0YsQzs7Ozs7Ozs7QUFRa0JDLFksQ0FBc0I7QUFDdkMsR0FBSUQsV0FBWUMsYUFBYUQsU0FBN0I7QUFDQSxHQUFJRyxLQUFNRixhQUFhRSxHQUF2Qjs7QUFFQSxHQUFJSSxzQkFBdUIsS0FBS1QscUJBQUwsQ0FBMkJFLFNBQTNCLENBQTNCO0FBQ0EsR0FBSU8sb0JBQUosQ0FBMEI7QUFDeEIsTUFBT0Esc0JBQXFCSixHQUFyQixDQUFQO0FBQ0Q7QUFDRixDOzs7Ozs7Ozs7Ozs7OztBQWN1QkgsUyxDQUEyQjtBQUNqRCxNQUFPLE1BQUtGLHFCQUFMLENBQTJCRSxTQUEzQixDQUFQO0FBQ0QsQzs7O0FBR0hRLE9BQU9DLE9BQVAsQ0FBaUJaLHVCQUFqQiIsImZpbGUiOiJFdmVudFN1YnNjcmlwdGlvblZlbmRvci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGdlbmVyYXRlZCBTaWduZWRTb3VyY2U8PDI0ZDVjYzFjZGQyNDcwNDI5NjY4NmZhZjg5ZGQzNmNmPj5cbiAqXG4gKiAhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhXG4gKiAhISBUaGlzIGZpbGUgaXMgYSBjaGVjay1pbiBvZiBhIHN0YXRpY191cHN0cmVhbSBwcm9qZWN0ISAgICAgICEhXG4gKiAhISAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICEhXG4gKiAhISBZb3Ugc2hvdWxkIG5vdCBtb2RpZnkgdGhpcyBmaWxlIGRpcmVjdGx5LiBJbnN0ZWFkOiAgICAgICAgICEhXG4gKiAhISAxKSBVc2UgYGZqcyB1c2UtdXBzdHJlYW1gIHRvIHRlbXBvcmFyaWx5IHJlcGxhY2UgdGhpcyB3aXRoICEhXG4gKiAhISAgICB0aGUgbGF0ZXN0IHZlcnNpb24gZnJvbSB1cHN0cmVhbS4gICAgICAgICAgICAgICAgICAgICAgICEhXG4gKiAhISAyKSBNYWtlIHlvdXIgY2hhbmdlcywgdGVzdCB0aGVtLCBldGMuICAgICAgICAgICAgICAgICAgICAgICEhXG4gKiAhISAzKSBVc2UgYGZqcyBwdXNoLXVwc3RyZWFtYCB0byBjb3B5IHlvdXIgY2hhbmdlcyBiYWNrIHRvICAgICEhXG4gKiAhISAgICBzdGF0aWNfdXBzdHJlYW0uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICEhXG4gKiAhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIFJlYWN0RXZlbnRTdWJzY3JpcHRpb25WZW5kb3JcbiAqIEB0eXBlY2hlY2tzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IGludmFyaWFudCBmcm9tICdmYmpzL2xpYi9pbnZhcmlhbnQnO1xuXG4vKipcbiAqIEV2ZW50U3Vic2NyaXB0aW9uVmVuZG9yIHN0b3JlcyBhIHNldCBvZiBFdmVudFN1YnNjcmlwdGlvbnMgdGhhdCBhcmVcbiAqIHN1YnNjcmliZWQgdG8gYSBwYXJ0aWN1bGFyIGV2ZW50IHR5cGUuXG4gKi9cbmNsYXNzIEV2ZW50U3Vic2NyaXB0aW9uVmVuZG9yIHtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLl9zdWJzY3JpcHRpb25zRm9yVHlwZSA9IHt9O1xuICAgIHRoaXMuX2N1cnJlbnRTdWJzY3JpcHRpb24gPSBudWxsO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHMgYSBzdWJzY3JpcHRpb24ga2V5ZWQgYnkgYW4gZXZlbnQgdHlwZS5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50VHlwZVxuICAgKiBAcGFyYW0ge0V2ZW50U3Vic2NyaXB0aW9ufSBzdWJzY3JpcHRpb25cbiAgICovXG4gIGFkZFN1YnNjcmlwdGlvbihcbiAgICBldmVudFR5cGU6IFN0cmluZywgc3Vic2NyaXB0aW9uOiBFdmVudFN1YnNjcmlwdGlvbik6IEV2ZW50U3Vic2NyaXB0aW9uIHtcbiAgICBpbnZhcmlhbnQoXG4gICAgICBzdWJzY3JpcHRpb24uc3Vic2NyaWJlciA9PT0gdGhpcyxcbiAgICAgICdUaGUgc3Vic2NyaWJlciBvZiB0aGUgc3Vic2NyaXB0aW9uIGlzIGluY29ycmVjdGx5IHNldC4nKTtcbiAgICBpZiAoIXRoaXMuX3N1YnNjcmlwdGlvbnNGb3JUeXBlW2V2ZW50VHlwZV0pIHtcbiAgICAgIHRoaXMuX3N1YnNjcmlwdGlvbnNGb3JUeXBlW2V2ZW50VHlwZV0gPSBbXTtcbiAgICB9XG4gICAgdmFyIGtleSA9IHRoaXMuX3N1YnNjcmlwdGlvbnNGb3JUeXBlW2V2ZW50VHlwZV0ubGVuZ3RoO1xuICAgIHRoaXMuX3N1YnNjcmlwdGlvbnNGb3JUeXBlW2V2ZW50VHlwZV0ucHVzaChzdWJzY3JpcHRpb24pO1xuICAgIHN1YnNjcmlwdGlvbi5ldmVudFR5cGUgPSBldmVudFR5cGU7XG4gICAgc3Vic2NyaXB0aW9uLmtleSA9IGtleTtcbiAgICByZXR1cm4gc3Vic2NyaXB0aW9uO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZXMgYSBidWxrIHNldCBvZiB0aGUgc3Vic2NyaXB0aW9ucy5cbiAgICpcbiAgICogQHBhcmFtIHs/c3RyaW5nfSBldmVudFR5cGUgLSBPcHRpb25hbCBuYW1lIG9mIHRoZSBldmVudCB0eXBlIHdob3NlXG4gICAqICAgcmVnaXN0ZXJlZCBzdXBzY3JpcHRpb25zIHRvIHJlbW92ZSwgaWYgbnVsbCByZW1vdmUgYWxsIHN1YnNjcmlwdGlvbnMuXG4gICAqL1xuICByZW1vdmVBbGxTdWJzY3JpcHRpb25zKGV2ZW50VHlwZTogP1N0cmluZykge1xuICAgIGlmIChldmVudFR5cGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhpcy5fc3Vic2NyaXB0aW9uc0ZvclR5cGUgPSB7fTtcbiAgICB9IGVsc2Uge1xuICAgICAgZGVsZXRlIHRoaXMuX3N1YnNjcmlwdGlvbnNGb3JUeXBlW2V2ZW50VHlwZV07XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZXMgYSBzcGVjaWZpYyBzdWJzY3JpcHRpb24uIEluc3RlYWQgb2YgY2FsbGluZyB0aGlzIGZ1bmN0aW9uLCBjYWxsXG4gICAqIGBzdWJzY3JpcHRpb24ucmVtb3ZlKClgIGRpcmVjdGx5LlxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gc3Vic2NyaXB0aW9uXG4gICAqL1xuICByZW1vdmVTdWJzY3JpcHRpb24oc3Vic2NyaXB0aW9uOiBPYmplY3QpIHtcbiAgICB2YXIgZXZlbnRUeXBlID0gc3Vic2NyaXB0aW9uLmV2ZW50VHlwZTtcbiAgICB2YXIga2V5ID0gc3Vic2NyaXB0aW9uLmtleTtcblxuICAgIHZhciBzdWJzY3JpcHRpb25zRm9yVHlwZSA9IHRoaXMuX3N1YnNjcmlwdGlvbnNGb3JUeXBlW2V2ZW50VHlwZV07XG4gICAgaWYgKHN1YnNjcmlwdGlvbnNGb3JUeXBlKSB7XG4gICAgICBkZWxldGUgc3Vic2NyaXB0aW9uc0ZvclR5cGVba2V5XTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyB0aGUgYXJyYXkgb2Ygc3Vic2NyaXB0aW9ucyB0aGF0IGFyZSBjdXJyZW50bHkgcmVnaXN0ZXJlZCBmb3IgdGhlXG4gICAqIGdpdmVuIGV2ZW50IHR5cGUuXG4gICAqXG4gICAqIE5vdGU6IFRoaXMgYXJyYXkgY2FuIGJlIHBvdGVudGlhbGx5IHNwYXJzZSBhcyBzdWJzY3JpcHRpb25zIGFyZSBkZWxldGVkXG4gICAqIGZyb20gaXQgd2hlbiB0aGV5IGFyZSByZW1vdmVkLlxuICAgKlxuICAgKiBUT0RPOiBUaGlzIHJldHVybnMgYSBudWxsYWJsZSBhcnJheS4gd2F0P1xuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZXZlbnRUeXBlXG4gICAqIEByZXR1cm5zIHs/YXJyYXl9XG4gICAqL1xuICBnZXRTdWJzY3JpcHRpb25zRm9yVHlwZShldmVudFR5cGU6IFN0cmluZyk6ID9BcnJheSB7XG4gICAgcmV0dXJuIHRoaXMuX3N1YnNjcmlwdGlvbnNGb3JUeXBlW2V2ZW50VHlwZV07XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBFdmVudFN1YnNjcmlwdGlvblZlbmRvcjtcbiJdfQ==