{"version":3,"sources":["SegmentedControl.web.js"],"names":["SegmentedControl","state","selectedIndex","props","momentary","value","index","event","setState","nativeEvent","selectedSegmentIndex","onChange","onValueChange","setTimeout","items","values","map","styles","segmentedControlItem","tintColor","borderColor","segmentedControlItemSelected","backgroundColor","firstChild","otherChild","length","lastChild","segmentedControlText","color","segmentedControlTextSelected","enabled","_onChange","bind","segmentedControl","disable","style","propTypes","arrayOf","string","number","func","bool","defaultProps","defaultColor","create","height","justifyContent","flexDirection","flex","borderStyle","borderTopWidth","borderBottomWidth","borderRightWidth","borderLeftWidth","fontSize","lineHeight","padding","textAlign","opacity","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius"],"mappings":"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","file":"SegmentedControl.web.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Alibaba Group Holding Limited.\n * All rights reserved.\n *\n * Copyright (c) 2015, Facebook, Inc.  All rights reserved.\n *\n */\n'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {View, Text, StyleSheet} from 'react-native-web';\nimport applyNativeMethods from 'react-native-web/dist/modules/applyNativeMethods';\n\nclass SegmentedControl extends Component {\n\n  static propTypes = {\n    /**\n     * The labels for the control's segment buttons, in order.\n     */\n    values: PropTypes.arrayOf(PropTypes.string),\n\n    /**\n     * The index in `props.values` of the segment to be pre-selected\n     */\n    selectedIndex: PropTypes.number,\n\n    /**\n     * Callback that is called when the user taps a segment;\n     * passes the segment's value as an argument\n     */\n    onValueChange: PropTypes.func,\n\n    /**\n     * Callback that is called when the user taps a segment;\n     * passes the event as an argument\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * If false the user won't be able to interact with the control.\n     * Default value is true.\n     */\n    enabled: PropTypes.bool,\n\n    /**\n     * Accent color of the control.\n     */\n    tintColor: PropTypes.string,\n\n    /**\n     * If true, then selecting a segment won't persist visually.\n     * The `onValueChange` callback will still work as expected.\n     */\n    momentary: PropTypes.bool\n  }\n\n  static defaultProps = {\n    values: [],\n    enabled: true\n  }\n\n  state = {\n    selectedIndex: this.props.selectedIndex,\n    momentary: false\n  }\n\n  _onChange(value, index, event: Event) {\n\n    if (this.state.selectedIndex == index) return;\n\n    this.setState({\n      selectedIndex: index\n    });\n\n    if (!event) {\n      event = {\n        nativeEvent: {}\n      };\n    }\n    // shim the value\n    event.nativeEvent.value = value;\n    event.nativeEvent.selectedSegmentIndex = index;\n    this.props.onChange && this.props.onChange(event);\n    this.props.onValueChange && this.props.onValueChange(event.nativeEvent\n      .value);\n\n    if (this.props.momentary) {\n      setTimeout(() => this.setState({\n        selectedIndex: null\n      }), 300);\n    }\n  }\n\n  render() {\n    let props = this.props;\n\n    let items = props.values.map((value, index) => {\n      return (<View key={index} style={[\n        styles.segmentedControlItem,\n        props.tintColor ? { borderColor: props.tintColor } : null,\n        (this.state.selectedIndex === index) ? [ styles.segmentedControlItemSelected, props.tintColor ? { backgroundColor: props.tintColor } : null ] : null,\n        index === 0 ? styles.firstChild : styles.otherChild,\n        index === props.values.length - 1 ? styles.lastChild : null\n      ]}>\n        <Text style={[\n          styles.segmentedControlText,\n          props.tintColor ? {\n            color: props.tintColor\n          } : null, (this.state.selectedIndex === index) ? styles\n            .segmentedControlTextSelected : null\n        ]}\n        onPress={props.enabled ? this._onChange.bind(this, value, index) : null}> {value} </Text></View>);\n    });\n\n    return (<View {...this.props} style={[styles.segmentedControl, props.enabled ? null : styles.disable, this.props.style]}>\n      {items}\n    </View>);\n  }\n};\n\nconst defaultColor = '#007AFF';\n\nlet styles = StyleSheet.create({\n  segmentedControl: {\n    height: 28,\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  segmentedControlItem: {\n    flex: 1,\n    backgroundColor: 'white',\n    borderColor: defaultColor,\n    borderStyle: 'solid',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderRightWidth: 1,\n    borderLeftWidth: 1,\n  },\n  segmentedControlItemSelected: {\n    backgroundColor: defaultColor,\n  },\n  segmentedControlText: {\n    color: defaultColor,\n    fontSize: 12,\n    lineHeight: 12,\n    padding: '7 0',\n    textAlign: 'center'\n  },\n  segmentedControlTextSelected: {\n    color: 'white',\n  },\n  disable: {\n    opacity: 0.5\n  },\n  firstChild: {\n    borderTopLeftRadius: 3,\n    borderBottomLeftRadius: 3,\n    borderRightWidth: 0,\n  },\n  otherChild: {\n    borderRightWidth: 0,\n  },\n  lastChild: {\n    borderTopRightRadius: 3,\n    borderBottomRightRadius: 3,\n    borderRightWidth: 1,\n  },\n});\n\nexport default applyNativeMethods(SegmentedControl);\n"]}