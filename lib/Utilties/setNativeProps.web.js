




'use strict';

var CSSPropertyOperations=require('react/lib/CSSPropertyOperations');


var numberTransformProperties={
translateX:true,
translateY:true,
translateZ:true};


function processTransformValue(value,key){
if(numberTransformProperties[key]&&typeof value=='number'){
value+='px';
}
return value;
}

function convertTransform(style){
var result={};
var transform='';
for(var k in style){
if(k==='transformMatrix'){

transform+='matrix3d('+style[k].join(',')+') ';

}if(k==='transform'){
var value=style[k];
if(Array.isArray(value)){

var transformations=[];
value.forEach(function(transformation){

var key=Object.keys(transformation)[0];
var val=transformation[key];


if(Array.isArray(val)){

var len=val.length;

if(key==='matrix'&&len===16||key==='translate'&&len===3){
key+='3d';
}

val=val.map(function(v){
return processTransformValue(v,key);
}).join(',');

}else{
val=processTransformValue(val,key);
}

transformations.push(key+'('+val+')');
});

transform+=transformations.join(' ');
}
}else{
result[k]=style[k];
}
}

if(transform){
result.transform=transform;
}

return result;
}

function setNativeProps(node,props,component){

for(var name in props){
if(name==='style'){
var style=props[name];
if('transformMatrix'in style||'transform'in style){
style=convertTransform(style);
}

CSSPropertyOperations.setValueForStyles(node,style,component);
}else{
node.setAttribute(name,props[name]);
}
}
}

module.exports=setNativeProps;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNldE5hdGl2ZVByb3BzLndlYi5qcyJdLCJuYW1lcyI6WyJDU1NQcm9wZXJ0eU9wZXJhdGlvbnMiLCJyZXF1aXJlIiwibnVtYmVyVHJhbnNmb3JtUHJvcGVydGllcyIsInRyYW5zbGF0ZVgiLCJ0cmFuc2xhdGVZIiwidHJhbnNsYXRlWiIsInByb2Nlc3NUcmFuc2Zvcm1WYWx1ZSIsInZhbHVlIiwia2V5IiwiY29udmVydFRyYW5zZm9ybSIsInN0eWxlIiwicmVzdWx0IiwidHJhbnNmb3JtIiwiayIsImpvaW4iLCJBcnJheSIsImlzQXJyYXkiLCJ0cmFuc2Zvcm1hdGlvbnMiLCJmb3JFYWNoIiwidHJhbnNmb3JtYXRpb24iLCJPYmplY3QiLCJrZXlzIiwidmFsIiwibGVuIiwibGVuZ3RoIiwibWFwIiwidiIsInB1c2giLCJzZXROYXRpdmVQcm9wcyIsIm5vZGUiLCJwcm9wcyIsImNvbXBvbmVudCIsIm5hbWUiLCJzZXRWYWx1ZUZvclN0eWxlcyIsInNldEF0dHJpYnV0ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBS0E7O0FBRUEsR0FBSUEsdUJBQXdCQywwQ0FBNUI7OztBQUdBLEdBQUlDLDJCQUE0QjtBQUM5QkMsV0FBWSxJQURrQjtBQUU5QkMsV0FBWSxJQUZrQjtBQUc5QkMsV0FBWSxJQUhrQixDQUFoQzs7O0FBTUEsUUFBU0Msc0JBQVQsQ0FBK0JDLEtBQS9CLENBQXNDQyxHQUF0QyxDQUEyQztBQUN6QyxHQUFJTiwwQkFBMEJNLEdBQTFCLEdBQWtDLE1BQU9ELE1BQVAsRUFBZ0IsUUFBdEQsQ0FBZ0U7QUFDOURBLE9BQVMsSUFBVDtBQUNEO0FBQ0QsTUFBT0EsTUFBUDtBQUNEOztBQUVELFFBQVNFLGlCQUFULENBQTBCQyxLQUExQixDQUFpQztBQUMvQixHQUFJQyxRQUFTLEVBQWI7QUFDQSxHQUFJQyxXQUFZLEVBQWhCO0FBQ0EsSUFBSyxHQUFJQyxFQUFULEdBQWNILE1BQWQsQ0FBcUI7QUFDbkIsR0FBSUcsSUFBTSxpQkFBVixDQUE2Qjs7QUFFM0JELFdBQWUsWUFBY0YsTUFBTUcsQ0FBTixFQUFTQyxJQUFULENBQWMsR0FBZCxDQUFkLENBQW1DLElBQWxEOztBQUVELENBQUMsR0FBSUQsSUFBTSxXQUFWLENBQXVCO0FBQ3ZCLEdBQUlOLE9BQVFHLE1BQU1HLENBQU4sQ0FBWjtBQUNBLEdBQUlFLE1BQU1DLE9BQU4sQ0FBY1QsS0FBZCxDQUFKLENBQTBCOztBQUV4QixHQUFJVSxpQkFBa0IsRUFBdEI7QUFDQVYsTUFBTVcsT0FBTixDQUFjLFNBQVNDLGNBQVQsQ0FBeUI7O0FBRXJDLEdBQUlYLEtBQU1ZLE9BQU9DLElBQVAsQ0FBWUYsY0FBWixFQUE0QixDQUE1QixDQUFWO0FBQ0EsR0FBSUcsS0FBTUgsZUFBZVgsR0FBZixDQUFWOzs7QUFHQSxHQUFJTyxNQUFNQyxPQUFOLENBQWNNLEdBQWQsQ0FBSixDQUF3Qjs7QUFFdEIsR0FBSUMsS0FBTUQsSUFBSUUsTUFBZDs7QUFFQSxHQUFLaEIsTUFBUSxRQUFSLEVBQW9CZSxNQUFRLEVBQTdCLEVBQXFDZixNQUFRLFdBQVIsRUFBdUJlLE1BQVEsQ0FBeEUsQ0FBNEU7QUFDMUVmLEtBQU8sSUFBUDtBQUNEOztBQUVEYyxJQUFNQSxJQUFJRyxHQUFKLENBQVEsU0FBU0MsQ0FBVCxDQUFZO0FBQ3hCLE1BQU9wQix1QkFBc0JvQixDQUF0QixDQUF5QmxCLEdBQXpCLENBQVA7QUFDRCxDQUZLLEVBRUhNLElBRkcsQ0FFRSxHQUZGLENBQU47O0FBSUQsQ0FaRCxJQVlPO0FBQ0xRLElBQU1oQixzQkFBc0JnQixHQUF0QixDQUEyQmQsR0FBM0IsQ0FBTjtBQUNEOztBQUVEUyxnQkFBZ0JVLElBQWhCLENBQXFCbkIsSUFBTSxHQUFOLENBQVljLEdBQVosQ0FBa0IsR0FBdkM7QUFDRCxDQXZCRDs7QUF5QkFWLFdBQWFLLGdCQUFnQkgsSUFBaEIsQ0FBcUIsR0FBckIsQ0FBYjtBQUNEO0FBQ0YsQ0FoQ0MsSUFnQ0s7QUFDTEgsT0FBT0UsQ0FBUCxFQUFZSCxNQUFNRyxDQUFOLENBQVo7QUFDRDtBQUNGOztBQUVELEdBQUlELFNBQUosQ0FBZTtBQUNiRCxPQUFPQyxTQUFQLENBQW1CQSxTQUFuQjtBQUNEOztBQUVELE1BQU9ELE9BQVA7QUFDRDs7QUFFRCxRQUFTaUIsZUFBVCxDQUF3QkMsSUFBeEIsQ0FBOEJDLEtBQTlCLENBQXFDQyxTQUFyQyxDQUFnRDs7QUFFOUMsSUFBSyxHQUFJQyxLQUFULEdBQWlCRixNQUFqQixDQUF3QjtBQUN0QixHQUFJRSxPQUFTLE9BQWIsQ0FBc0I7QUFDcEIsR0FBSXRCLE9BQVFvQixNQUFNRSxJQUFOLENBQVo7QUFDQSxHQUFJLG1CQUFxQnRCLE1BQXJCLEVBQThCLGFBQWVBLE1BQWpELENBQXdEO0FBQ3REQSxNQUFRRCxpQkFBaUJDLEtBQWpCLENBQVI7QUFDRDs7QUFFRFYsc0JBQXNCaUMsaUJBQXRCLENBQXdDSixJQUF4QyxDQUE4Q25CLEtBQTlDLENBQXFEcUIsU0FBckQ7QUFDRCxDQVBELElBT087QUFDTEYsS0FBS0ssWUFBTCxDQUFrQkYsSUFBbEIsQ0FBd0JGLE1BQU1FLElBQU4sQ0FBeEI7QUFDRDtBQUNGO0FBQ0Y7O0FBRURHLE9BQU9DLE9BQVAsQ0FBaUJSLGNBQWpCIiwiZmlsZSI6InNldE5hdGl2ZVByb3BzLndlYi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEFsaWJhYmEgR3JvdXAgSG9sZGluZyBMaW1pdGVkLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIENTU1Byb3BlcnR5T3BlcmF0aW9ucyA9IHJlcXVpcmUoJ3JlYWN0L2xpYi9DU1NQcm9wZXJ0eU9wZXJhdGlvbnMnKTtcblxuLy8gc29tZSBudW1iZXIgdGhhdCByZWFjdCBub3QgYXV0byBhZGQgcHhcbnZhciBudW1iZXJUcmFuc2Zvcm1Qcm9wZXJ0aWVzID0ge1xuICB0cmFuc2xhdGVYOiB0cnVlLFxuICB0cmFuc2xhdGVZOiB0cnVlLFxuICB0cmFuc2xhdGVaOiB0cnVlXG59O1xuXG5mdW5jdGlvbiBwcm9jZXNzVHJhbnNmb3JtVmFsdWUodmFsdWUsIGtleSkge1xuICBpZiAobnVtYmVyVHJhbnNmb3JtUHJvcGVydGllc1trZXldICYmIHR5cGVvZiB2YWx1ZSA9PSAnbnVtYmVyJykge1xuICAgIHZhbHVlICs9ICdweCc7XG4gIH1cbiAgcmV0dXJuIHZhbHVlO1xufVxuXG5mdW5jdGlvbiBjb252ZXJ0VHJhbnNmb3JtKHN0eWxlKSB7XG4gIHZhciByZXN1bHQgPSB7fTtcbiAgbGV0IHRyYW5zZm9ybSA9ICcnO1xuICBmb3IgKHZhciBrIGluIHN0eWxlKSB7XG4gICAgaWYgKGsgPT09ICd0cmFuc2Zvcm1NYXRyaXgnKSB7XG5cbiAgICAgIHRyYW5zZm9ybSArPSAoICdtYXRyaXgzZCgnICsgc3R5bGVba10uam9pbignLCcpICsgJykgJyApO1xuXG4gICAgfSBpZiAoayA9PT0gJ3RyYW5zZm9ybScpIHtcbiAgICAgIGxldCB2YWx1ZSA9IHN0eWxlW2tdO1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG5cbiAgICAgICAgdmFyIHRyYW5zZm9ybWF0aW9ucyA9IFtdO1xuICAgICAgICB2YWx1ZS5mb3JFYWNoKGZ1bmN0aW9uKHRyYW5zZm9ybWF0aW9uKSB7XG5cbiAgICAgICAgICB2YXIga2V5ID0gT2JqZWN0LmtleXModHJhbnNmb3JtYXRpb24pWzBdO1xuICAgICAgICAgIHZhciB2YWwgPSB0cmFuc2Zvcm1hdGlvbltrZXldO1xuXG4gICAgICAgICAgLy8gdHJhbnNsYXRlIG1hdHJpeCBoYXZlIGFuIGFycmF5IGFzIHRoZSB2YWx1ZVxuICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbCkpIHtcblxuICAgICAgICAgICAgdmFyIGxlbiA9IHZhbC5sZW5ndGg7XG5cbiAgICAgICAgICAgIGlmICgoa2V5ID09PSAnbWF0cml4JyAmJiBsZW4gPT09IDE2KSB8fCAoa2V5ID09PSAndHJhbnNsYXRlJyAmJiBsZW4gPT09IDMpKSB7XG4gICAgICAgICAgICAgIGtleSArPSAnM2QnO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YWwgPSB2YWwubWFwKGZ1bmN0aW9uKHYpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb2Nlc3NUcmFuc2Zvcm1WYWx1ZSh2LCBrZXkpO1xuICAgICAgICAgICAgfSkuam9pbignLCcpO1xuXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhbCA9IHByb2Nlc3NUcmFuc2Zvcm1WYWx1ZSh2YWwsIGtleSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdHJhbnNmb3JtYXRpb25zLnB1c2goa2V5ICsgJygnICsgdmFsICsgJyknKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdHJhbnNmb3JtICs9IHRyYW5zZm9ybWF0aW9ucy5qb2luKCcgJyk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdFtrXSA9IHN0eWxlW2tdO1xuICAgIH1cbiAgfVxuXG4gIGlmICh0cmFuc2Zvcm0pIHtcbiAgICByZXN1bHQudHJhbnNmb3JtID0gdHJhbnNmb3JtO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gc2V0TmF0aXZlUHJvcHMobm9kZSwgcHJvcHMsIGNvbXBvbmVudCkge1xuXG4gIGZvciAodmFyIG5hbWUgaW4gcHJvcHMpIHtcbiAgICBpZiAobmFtZSA9PT0gJ3N0eWxlJykge1xuICAgICAgdmFyIHN0eWxlID0gcHJvcHNbbmFtZV07XG4gICAgICBpZiAoJ3RyYW5zZm9ybU1hdHJpeCcgaW4gc3R5bGUgfHwgJ3RyYW5zZm9ybScgaW4gc3R5bGUpIHtcbiAgICAgICAgc3R5bGUgPSBjb252ZXJ0VHJhbnNmb3JtKHN0eWxlKTtcbiAgICAgIH1cblxuICAgICAgQ1NTUHJvcGVydHlPcGVyYXRpb25zLnNldFZhbHVlRm9yU3R5bGVzKG5vZGUsIHN0eWxlLCBjb21wb25lbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBub2RlLnNldEF0dHJpYnV0ZShuYW1lLCBwcm9wc1tuYW1lXSk7XG4gICAgfVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0TmF0aXZlUHJvcHM7XG4iXX0=