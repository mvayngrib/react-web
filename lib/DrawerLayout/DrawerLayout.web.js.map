{"version":3,"sources":["DrawerLayout.web.js"],"names":["DEVICE_WIDTH","parseFloat","get","width","THRESHOLD","VX_MAX","IDLE","DRAGGING","SETTLING","DrawerLayout","state","openValue","Value","addListener","value","_lastOpenValue","props","onDrawerSlide","nativeEvent","offset","_panResponder","create","onMoveShouldSetPanResponder","_shouldSetPanResponder","onPanResponderGrant","_panResponderGrant","onPanResponderMove","_panResponderMove","onPanResponderTerminationRequest","evt","gestureState","onPanResponderRelease","_panResponderRelease","onPanResponderTerminate","drawerPosition","drawerWidth","dynamicDrawerStyles","outputRange","drawerTranslateX","interpolate","inputRange","extrapolate","animatedDrawerStyles","transform","translateX","overlayOpacity","animatedOverlayStyles","opacity","flex","backgroundColor","panHandlers","styles","main","children","overlay","close","drawer","renderNavigationView","newState","onDrawerStateChanged","options","_emitStateChanged","spring","toValue","bounciness","restSpeedThreshold","start","onDrawerOpen","onDrawerClose","e","moveX","dx","dy","overlayArea","Math","abs","_isClosing","_closingAnchorValue","_getOpenValueForX","setValue","vx","previouslyOpen","isWithinVelocityThreshold","open","velocity","x","positions","Left","Right","defaultProps","propTypes","number","isRequired","oneOf","func","keyboardDismissMode","position","top","bottom","left","right"],"mappings":"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","file":"DrawerLayout.web.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Alibaba Group Holding Limited.\n * All rights reserved.\n *\n */\n'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport applyNativeMethods from 'react-native-web/dist/modules/applyNativeMethods';\nimport {View, Animated, StyleSheet, Dimensions, PanResponder} from 'react-native-web';\n\nconst DEVICE_WIDTH = parseFloat(Dimensions.get('window').width);\nconst THRESHOLD = DEVICE_WIDTH / 2;\nconst VX_MAX = 0.1;\n\nconst IDLE = 'Idle';\nconst DRAGGING = 'Dragging';\nconst SETTLING = 'Settling';\n\nclass DrawerLayout extends Component {\n\n  static positions = {\n    Left: 'left',\n    Right: 'right'\n  }\n\n  static defaultProps = {\n    drawerWidth: 0,\n    drawerPosition: 'left',\n  }\n\n  static propTypes = {\n    drawerWidth: PropTypes.number.isRequired,\n    drawerPosition: PropTypes.oneOf(['left', 'right']).isRequired,\n    renderNavigationView: PropTypes.func.isRequired,\n\n    onDrawerSlide: PropTypes.func,\n    onDrawerStateChanged: PropTypes.func,\n\n    onDrawerOpen: PropTypes.func,\n    onDrawerClose: PropTypes.func,\n\n    /* Not implemented */\n    keyboardDismissMode: PropTypes.oneOf(['none', 'on-drag']),\n  }\n\n  state = {\n    openValue: new Animated.Value(0),\n  }\n\n  componentWillMount() {\n    let { openValue } = this.state;\n\n    openValue.addListener(({value}) => {\n      this._lastOpenValue = value;\n      this.props.onDrawerSlide && this.props.onDrawerSlide({nativeEvent: {offset: value}});\n    });\n\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponder: this._shouldSetPanResponder,\n      onPanResponderGrant: this._panResponderGrant,\n      onPanResponderMove: this._panResponderMove,\n      onPanResponderTerminationRequest: (evt, gestureState) => true,\n      onPanResponderRelease: this._panResponderRelease,\n      onPanResponderTerminate: (evt, gestureState) => { }\n    });\n  }\n\n  render() {\n    let { openValue } = this.state;\n    let { drawerPosition, drawerWidth } = this.props;\n    let dynamicDrawerStyles = {};\n    dynamicDrawerStyles[drawerPosition] = 0;\n    dynamicDrawerStyles.width = drawerWidth;\n\n    /* Drawer styles */\n    let outputRange;\n\n    if (drawerPosition === 'left') {\n      outputRange = [-drawerWidth, 0];\n    } else {\n      outputRange = [drawerWidth, 0];\n    }\n\n    let drawerTranslateX = openValue.interpolate({\n      inputRange: [0, 1],\n      outputRange,\n      extrapolate: 'clamp',\n    });\n    let animatedDrawerStyles = {transform: [{translateX: drawerTranslateX}]};\n\n    /* Overlay styles */\n    // let opacityOutputRange;\n\n    let overlayOpacity = openValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 0.7],\n      extrapolate: 'clamp',\n    });\n    let animatedOverlayStyles = {opacity: overlayOpacity};\n\n    return (\n      <View style={{flex: 1, backgroundColor: 'transparent'}} {...this._panResponder.panHandlers}>\n        <Animated.View style={styles.main}>\n          {this.props.children}\n        </Animated.View>\n\n        <Animated.View style={[styles.overlay, animatedOverlayStyles]} onClick={this.close} />\n        <Animated.View style={[styles.drawer, dynamicDrawerStyles, animatedDrawerStyles]}>\n          {this.props.renderNavigationView()}\n        </Animated.View>\n      </View>\n    );\n  }\n\n  _emitStateChanged(newState) {\n    this.props.onDrawerStateChanged && this.props.onDrawerStateChanged(newState);\n  }\n\n  open(options = {}) {\n    this._emitStateChanged(SETTLING);\n    Animated.spring(this.state.openValue, {toValue: 1, bounciness: 0, restSpeedThreshold: 0.1, ...options}).start(() => {\n      this.props.onDrawerOpen && this.props.onDrawerOpen();\n      this._emitStateChanged(IDLE);\n    });\n  }\n\n  close(options = {}) {\n    this._emitStateChanged(SETTLING);\n    Animated.spring(this.state.openValue, {toValue: 0, bounciness: 0, restSpeedThreshold: 1, ...options}).start(() => {\n      this.props.onDrawerClose && this.props.onDrawerClose();\n      this._emitStateChanged(IDLE);\n    });\n  }\n\n  _handleDrawerOpen() {\n    this.props.onDrawerOpen && this.props.onDrawerOpen();\n  }\n\n  _handleDrawerClose() {\n    this.props.onDrawerClose && this.props.onDrawerClose();\n  }\n\n  _shouldSetPanResponder(e, {moveX, dx, dy}) {\n    let { drawerPosition } = this.props;\n\n    if (drawerPosition === 'left') {\n      let overlayArea = DEVICE_WIDTH - (DEVICE_WIDTH - this.props.drawerWidth);\n\n      if (this._lastOpenValue === 1) {\n        if (dx < 0 && Math.abs(dx) > Math.abs(dy) * 3 || moveX > overlayArea) {\n          this._isClosing = true;\n          this._closingAnchorValue = this._getOpenValueForX(moveX);\n          return true;\n        }\n      } else {\n        if (moveX <= 35 && dx > 0) {\n          this._isClosing = false;\n          return true;\n        } else {\n          return false;\n        }\n      }\n    } else {\n      let overlayArea = DEVICE_WIDTH - this.props.drawerWidth;\n\n      if (this._lastOpenValue === 1) {\n        if (dx > 0 && Math.abs(dx) > Math.abs(dy) * 3 || moveX < overlayArea) {\n          this._isClosing = true;\n          this._closingAnchorValue = this._getOpenValueForX(moveX);\n          return true;\n        }\n      } else {\n        if (moveX >= DEVICE_WIDTH - 35 && dx < 0) {\n          this._isClosing = false;\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }\n  }\n\n  _panResponderGrant() {\n    this._emitStateChanged(DRAGGING);\n  }\n\n  _panResponderMove(e, {moveX}) {\n    let openValue = this._getOpenValueForX(moveX);\n\n    if (this._isClosing) {\n      openValue = 1 - (this._closingAnchorValue - openValue);\n    }\n\n    if (openValue > 1) {\n      openValue = 1;\n    } else if (openValue < 0) {\n      openValue = 0;\n    }\n\n    this.state.openValue.setValue(openValue);\n  }\n\n  _panResponderRelease(e, {moveX, vx}) {\n    let { drawerPosition } = this.props;\n    // let { openValue } = this.state;\n    let previouslyOpen = this._isClosing;\n    let isWithinVelocityThreshold = vx < VX_MAX && vx > -VX_MAX;\n\n    if (drawerPosition === 'left') {\n      if (vx > 0 && moveX > THRESHOLD || vx >= VX_MAX || isWithinVelocityThreshold && previouslyOpen && moveX > THRESHOLD) {\n        this.open({velocity: vx});\n      } else if (vx < 0 && moveX < THRESHOLD || vx < -VX_MAX || isWithinVelocityThreshold && !previouslyOpen) {\n        this.close({velocity: vx});\n      } else if (previouslyOpen) {\n        this.open();\n      } else {\n        this.close();\n      }\n    } else {\n      if (vx < 0 && moveX < THRESHOLD || vx <= -VX_MAX || isWithinVelocityThreshold && previouslyOpen && moveX < THRESHOLD) {\n        this.open({velocity: -1 * vx});\n      } else if (vx > 0 && moveX > THRESHOLD || vx > VX_MAX || isWithinVelocityThreshold && !previouslyOpen) {\n        this.close({velocity: -1 * vx});\n      } else if (previouslyOpen) {\n        this.open();\n      } else {\n        this.close();\n      }\n    }\n  }\n\n  _getOpenValueForX(x) {\n    let { drawerPosition, drawerWidth } = this.props;\n\n    if (drawerPosition === 'left') {\n      return x / drawerWidth;\n    } else if (drawerPosition === 'right') {\n      return (DEVICE_WIDTH - x) / drawerWidth;\n    }\n  }\n}\n\nlet styles = StyleSheet.create({\n  drawer: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n  },\n  main: {\n    flex: 1,\n  },\n  overlay: {\n    backgroundColor: '#000',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n  },\n});\n\nexport default applyNativeMethods(DrawerLayout);\n"]}