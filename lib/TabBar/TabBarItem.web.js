




'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};

var _react=require('react');var _react2=_interopRequireDefault(_react);
var _ReactImage=require('../Image/Image.web');var _ReactImage2=_interopRequireDefault(_ReactImage);
var _ReactText=require('../Text/Text.web');var _ReactText2=_interopRequireDefault(_ReactText);
var _ReactView=require('../View/View.web');var _ReactView2=_interopRequireDefault(_ReactView);
var _ReactStyleSheet=require('../StyleSheet/StyleSheet.web');var _ReactStyleSheet2=_interopRequireDefault(_ReactStyleSheet);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

var TabBarItem=_react2.default.createClass({displayName:'TabBarItem',
propTypes:{



badge:_react.PropTypes.oneOfType([
_react.PropTypes.string,_react.PropTypes.number]),




icon:_react.PropTypes.object,




selectedIcon:_react.PropTypes.string,




onPress:_react.PropTypes.func,




selected:_react.PropTypes.bool,



style:_react.PropTypes.object,




title:_react.PropTypes.string,



selectedColor:_react.PropTypes.string},


_onClick:function _onClick(){
if(this.props.onPress){
this.props.onPress();
}
if(this.props.handleTouchTap){
this.props.handleTouchTap(this.props.index);
}
},

render:function render(){

var tabStyle=_extends({},styles.tab,this.props.style||{},{color:this.props.selectedColor&&this.props.selected?this.props.selectedColor:null});

return(
_react2.default.createElement('li',{style:tabStyle},
_react2.default.createElement('a',{onClick:this._onClick,style:styles.link},
this.props.badge?_react2.default.createElement('em',{style:styles.badge},this.props.badge):'',
_react2.default.createElement(_ReactImage2.default,{source:this.props.selected&&this.props.selectedIcon?this.props.selectedIcon:this.props.icon,style:styles.icon}),
_react2.default.createElement(_ReactView2.default,{style:{marginTop:4}},
_react2.default.createElement(_ReactText2.default,{style:styles.title},this.props.title)))));




}});


var styles=_ReactStyleSheet2.default.create({
tab:{
display:'table-cell',
textAlign:'center',
position:'relative'},

link:{
display:'block',
padding:'0.3em 0'},

badge:{
display:'inline-block',
position:'absolute',
top:0,
left:'52%',
color:'#FFF',
backgroundColor:'#FF0000',
height:'1.6em',
lineHeight:'1.6em',
minWidth:'1.6em',
fontSize:'0.7em',
borderRadius:'0.8em',
fontStyle:'normal'},

icon:{
width:'1.875em',
height:'1.875em'},

title:{
fontSize:12}});exports.default=



TabBarItem;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRhYkJhckl0ZW0ud2ViLmpzIl0sIm5hbWVzIjpbIlRhYkJhckl0ZW0iLCJjcmVhdGVDbGFzcyIsInByb3BUeXBlcyIsImJhZGdlIiwib25lT2ZUeXBlIiwic3RyaW5nIiwibnVtYmVyIiwiaWNvbiIsIm9iamVjdCIsInNlbGVjdGVkSWNvbiIsIm9uUHJlc3MiLCJmdW5jIiwic2VsZWN0ZWQiLCJib29sIiwic3R5bGUiLCJ0aXRsZSIsInNlbGVjdGVkQ29sb3IiLCJfb25DbGljayIsInByb3BzIiwiaGFuZGxlVG91Y2hUYXAiLCJpbmRleCIsInJlbmRlciIsInRhYlN0eWxlIiwic3R5bGVzIiwidGFiIiwiY29sb3IiLCJsaW5rIiwibWFyZ2luVG9wIiwiY3JlYXRlIiwiZGlzcGxheSIsInRleHRBbGlnbiIsInBvc2l0aW9uIiwicGFkZGluZyIsInRvcCIsImxlZnQiLCJiYWNrZ3JvdW5kQ29sb3IiLCJoZWlnaHQiLCJsaW5lSGVpZ2h0IiwibWluV2lkdGgiLCJmb250U2l6ZSIsImJvcmRlclJhZGl1cyIsImZvbnRTdHlsZSIsIndpZHRoIl0sIm1hcHBpbmdzIjoiOzs7OztBQUtBLGE7O0FBRUEsNEI7QUFDQSw4QztBQUNBLDJDO0FBQ0EsMkM7QUFDQSw2RDs7QUFFQSxHQUFJQSxZQUFhLGdCQUFNQyxXQUFOLENBQWtCO0FBQ2pDQyxVQUFXOzs7O0FBSVRDLE1BQU8saUJBQVVDLFNBQVYsQ0FBb0I7QUFDekIsaUJBQVVDLE1BRGUsQ0FDUCxpQkFBVUMsTUFESCxDQUFwQixDQUpFOzs7OztBQVVUQyxLQUFNLGlCQUFVQyxNQVZQOzs7OztBQWVUQyxhQUFjLGlCQUFVSixNQWZmOzs7OztBQW9CVEssUUFBUyxpQkFBVUMsSUFwQlY7Ozs7O0FBeUJUQyxTQUFVLGlCQUFVQyxJQXpCWDs7OztBQTZCVEMsTUFBTyxpQkFBVU4sTUE3QlI7Ozs7O0FBa0NUTyxNQUFPLGlCQUFVVixNQWxDUjs7OztBQXNDVFcsY0FBZSxpQkFBVVgsTUF0Q2hCLENBRHNCOzs7QUEwQ2pDWSxRQTFDaUMsb0JBMEN0QjtBQUNULEdBQUksS0FBS0MsS0FBTCxDQUFXUixPQUFmLENBQXdCO0FBQ3RCLEtBQUtRLEtBQUwsQ0FBV1IsT0FBWDtBQUNEO0FBQ0QsR0FBSSxLQUFLUSxLQUFMLENBQVdDLGNBQWYsQ0FBK0I7QUFDN0IsS0FBS0QsS0FBTCxDQUFXQyxjQUFYLENBQTBCLEtBQUtELEtBQUwsQ0FBV0UsS0FBckM7QUFDRDtBQUNGLENBakRnQzs7QUFtRGpDQyxNQW5EaUMsa0JBbUR4Qjs7QUFFUCxHQUFJQyxzQkFBZUMsT0FBT0MsR0FBdEIsQ0FBOEIsS0FBS04sS0FBTCxDQUFXSixLQUFYLEVBQW9CLEVBQWxELEVBQXNEVyxNQUFRLEtBQUtQLEtBQUwsQ0FBV0YsYUFBWCxFQUE0QixLQUFLRSxLQUFMLENBQVdOLFFBQXhDLENBQW9ELEtBQUtNLEtBQUwsQ0FBV0YsYUFBL0QsQ0FBK0UsSUFBNUksRUFBSjs7QUFFQTtBQUNFLG9DQUFJLE1BQU9NLFFBQVg7QUFDRSxtQ0FBRyxRQUFTLEtBQUtMLFFBQWpCLENBQTJCLE1BQU9NLE9BQU9HLElBQXpDO0FBQ0csS0FBS1IsS0FBTCxDQUFXZixLQUFYLENBQW1CLG9DQUFJLE1BQU9vQixPQUFPcEIsS0FBbEIsRUFBMEIsS0FBS2UsS0FBTCxDQUFXZixLQUFyQyxDQUFuQixDQUFzRSxFQUR6RTtBQUVFLG9EQUFPLE9BQVMsS0FBS2UsS0FBTCxDQUFXTixRQUFYLEVBQXVCLEtBQUtNLEtBQUwsQ0FBV1QsWUFBbkMsQ0FBbUQsS0FBS1MsS0FBTCxDQUFXVCxZQUE5RCxDQUE2RSxLQUFLUyxLQUFMLENBQVdYLElBQXZHLENBQTZHLE1BQU9nQixPQUFPaEIsSUFBM0gsRUFGRjtBQUdFLG1EQUFNLE1BQU8sQ0FBQ29CLFVBQVcsQ0FBWixDQUFiO0FBQ0UsbURBQU0sTUFBT0osT0FBT1IsS0FBcEIsRUFBNEIsS0FBS0csS0FBTCxDQUFXSCxLQUF2QyxDQURGLENBSEYsQ0FERixDQURGOzs7OztBQVdELENBbEVnQyxDQUFsQixDQUFqQjs7O0FBcUVBLEdBQUlRLFFBQVMsMEJBQVdLLE1BQVgsQ0FBa0I7QUFDN0JKLElBQUs7QUFDSEssUUFBUyxZQUROO0FBRUhDLFVBQVcsUUFGUjtBQUdIQyxTQUFVLFVBSFAsQ0FEd0I7O0FBTTdCTCxLQUFNO0FBQ0pHLFFBQVMsT0FETDtBQUVKRyxRQUFTLFNBRkwsQ0FOdUI7O0FBVTdCN0IsTUFBTztBQUNMMEIsUUFBUyxjQURKO0FBRUxFLFNBQVUsVUFGTDtBQUdMRSxJQUFLLENBSEE7QUFJTEMsS0FBTSxLQUpEO0FBS0xULE1BQU8sTUFMRjtBQU1MVSxnQkFBaUIsU0FOWjtBQU9MQyxPQUFRLE9BUEg7QUFRTEMsV0FBWSxPQVJQO0FBU0xDLFNBQVUsT0FUTDtBQVVMQyxTQUFVLE9BVkw7QUFXTEMsYUFBYyxPQVhUO0FBWUxDLFVBQVcsUUFaTixDQVZzQjs7QUF3QjdCbEMsS0FBTTtBQUNKbUMsTUFBTyxTQURIO0FBRUpOLE9BQVEsU0FGSixDQXhCdUI7O0FBNEI3QnJCLE1BQU87QUFDTHdCLFNBQVUsRUFETCxDQTVCc0IsQ0FBbEIsQ0FBYixDOzs7O0FBaUNldkMsVSIsImZpbGUiOiJUYWJCYXJJdGVtLndlYi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEFsaWJhYmEgR3JvdXAgSG9sZGluZyBMaW1pdGVkLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IFJlYWN0LCB7IFByb3BUeXBlcyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBJbWFnZSBmcm9tICdSZWFjdEltYWdlJztcbmltcG9ydCBUZXh0IGZyb20gJ1JlYWN0VGV4dCc7XG5pbXBvcnQgVmlldyBmcm9tICdSZWFjdFZpZXcnO1xuaW1wb3J0IFN0eWxlU2hlZXQgZnJvbSAnUmVhY3RTdHlsZVNoZWV0JztcblxubGV0IFRhYkJhckl0ZW0gPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gIHByb3BUeXBlczoge1xuICAgIC8qKlxuICAgICAqIExpdHRsZSByZWQgYnViYmxlIHRoYXQgc2l0cyBhdCB0aGUgdG9wIHJpZ2h0IG9mIHRoZSBpY29uLlxuICAgICAqL1xuICAgIGJhZGdlOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtcbiAgICAgIFByb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5udW1iZXIsXG4gICAgXSksXG4gICAgLyoqXG4gICAgICogQSBjdXN0b20gaWNvbiBmb3IgdGhlIHRhYi4gSXQgaXMgaWdub3JlZCB3aGVuIGEgc3lzdGVtIGljb24gaXMgZGVmaW5lZC5cbiAgICAgKi9cbiAgICBpY29uOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIC8qKlxuICAgICAqIEEgY3VzdG9tIGljb24gd2hlbiB0aGUgdGFiIGlzIHNlbGVjdGVkLiBJdCBpcyBpZ25vcmVkIHdoZW4gYSBzeXN0ZW1cbiAgICAgKiBpY29uIGlzIGRlZmluZWQuIElmIGxlZnQgZW1wdHksIHRoZSBpY29uIHdpbGwgYmUgdGludGVkIGluIGJsdWUuXG4gICAgICovXG4gICAgc2VsZWN0ZWRJY29uOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIC8qKlxuICAgICAqIENhbGxiYWNrIHdoZW4gdGhpcyB0YWIgaXMgYmVpbmcgc2VsZWN0ZWQsIHlvdSBzaG91bGQgY2hhbmdlIHRoZSBzdGF0ZSBvZiB5b3VyXG4gICAgICogY29tcG9uZW50IHRvIHNldCBzZWxlY3RlZD17dHJ1ZX0uXG4gICAgICovXG4gICAgb25QcmVzczogUHJvcFR5cGVzLmZ1bmMsXG4gICAgLyoqXG4gICAgICogSXQgc3BlY2lmaWVzIHdoZXRoZXIgdGhlIGNoaWxkcmVuIGFyZSB2aXNpYmxlIG9yIG5vdC4gSWYgeW91IHNlZSBhXG4gICAgICogYmxhbmsgY29udGVudCwgeW91IHByb2JhYmx5IGZvcmdvdCB0byBhZGQgYSBzZWxlY3RlZCBvbmUuXG4gICAgICovXG4gICAgc2VsZWN0ZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIC8qKlxuICAgICAqIFJlYWN0IHN0eWxlIG9iamVjdC5cbiAgICAgKi9cbiAgICBzdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICAvKipcbiAgICAgKiBUZXh0IHRoYXQgYXBwZWFycyB1bmRlciB0aGUgaWNvbi4gSXQgaXMgaWdub3JlZCB3aGVuIGEgc3lzdGVtIGljb25cbiAgICAgKiBpcyBkZWZpbmVkLlxuICAgICAqL1xuICAgIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIC8qKlxuICAgICAqIENvbG9yIG9mIHRoZSBjdXJyZW50bHkgc2VsZWN0ZWQgdGFiIGljb25cbiAgICAgKi9cbiAgICBzZWxlY3RlZENvbG9yOiBQcm9wVHlwZXMuc3RyaW5nXG4gIH0sXG5cbiAgX29uQ2xpY2soKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25QcmVzcykge1xuICAgICAgdGhpcy5wcm9wcy5vblByZXNzKCk7XG4gICAgfVxuICAgIGlmICh0aGlzLnByb3BzLmhhbmRsZVRvdWNoVGFwKSB7XG4gICAgICB0aGlzLnByb3BzLmhhbmRsZVRvdWNoVGFwKHRoaXMucHJvcHMuaW5kZXgpO1xuICAgIH1cbiAgfSxcblxuICByZW5kZXIoKSB7XG5cbiAgICB2YXIgdGFiU3R5bGUgPSB7Li4uc3R5bGVzLnRhYiwgLi4udGhpcy5wcm9wcy5zdHlsZSB8fCB7fSwgY29sb3I6ICh0aGlzLnByb3BzLnNlbGVjdGVkQ29sb3IgJiYgdGhpcy5wcm9wcy5zZWxlY3RlZCkgPyB0aGlzLnByb3BzLnNlbGVjdGVkQ29sb3IgOiBudWxsfTtcblxuICAgIHJldHVybiAoXG4gICAgICA8bGkgc3R5bGU9e3RhYlN0eWxlfT5cbiAgICAgICAgPGEgb25DbGljaz17dGhpcy5fb25DbGlja30gc3R5bGU9e3N0eWxlcy5saW5rfT5cbiAgICAgICAgICB7dGhpcy5wcm9wcy5iYWRnZSA/IDxlbSBzdHlsZT17c3R5bGVzLmJhZGdlfT57dGhpcy5wcm9wcy5iYWRnZX08L2VtPiA6ICcnfVxuICAgICAgICAgIDxJbWFnZSBzb3VyY2U9eyh0aGlzLnByb3BzLnNlbGVjdGVkICYmIHRoaXMucHJvcHMuc2VsZWN0ZWRJY29uKSA/IHRoaXMucHJvcHMuc2VsZWN0ZWRJY29uIDogdGhpcy5wcm9wcy5pY29ufSBzdHlsZT17c3R5bGVzLmljb259IC8+XG4gICAgICAgICAgPFZpZXcgc3R5bGU9e3ttYXJnaW5Ub3A6IDR9fT5cbiAgICAgICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMudGl0bGV9Pnt0aGlzLnByb3BzLnRpdGxlfTwvVGV4dD5cbiAgICAgICAgICA8L1ZpZXc+XG4gICAgICAgIDwvYT5cbiAgICAgIDwvbGk+XG4gICAgKTtcbiAgfVxufSk7XG5cbmxldCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIHRhYjoge1xuICAgIGRpc3BsYXk6ICd0YWJsZS1jZWxsJyxcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnXG4gIH0sXG4gIGxpbms6IHtcbiAgICBkaXNwbGF5OiAnYmxvY2snLFxuICAgIHBhZGRpbmc6ICcwLjNlbSAwJ1xuICB9LFxuICBiYWRnZToge1xuICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgIHRvcDogMCxcbiAgICBsZWZ0OiAnNTIlJyxcbiAgICBjb2xvcjogJyNGRkYnLFxuICAgIGJhY2tncm91bmRDb2xvcjogJyNGRjAwMDAnLFxuICAgIGhlaWdodDogJzEuNmVtJyxcbiAgICBsaW5lSGVpZ2h0OiAnMS42ZW0nLFxuICAgIG1pbldpZHRoOiAnMS42ZW0nLFxuICAgIGZvbnRTaXplOiAnMC43ZW0nLFxuICAgIGJvcmRlclJhZGl1czogJzAuOGVtJyxcbiAgICBmb250U3R5bGU6ICdub3JtYWwnXG4gIH0sXG4gIGljb246IHtcbiAgICB3aWR0aDogJzEuODc1ZW0nLFxuICAgIGhlaWdodDogJzEuODc1ZW0nXG4gIH0sXG4gIHRpdGxlOiB7XG4gICAgZm9udFNpemU6IDEyXG4gIH1cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBUYWJCYXJJdGVtO1xuIl19