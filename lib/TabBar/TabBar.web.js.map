{"version":3,"sources":["TabBar.web.js"],"names":["TabBar","state","selectedIndex","create","container","width","height","props","clientHeight","document","documentElement","position","overflow","content","bar","padding","margin","listStyle","left","bottom","backgroundColor","display","index","setState","self","styles","getStyles","barStyle","style","barTintColor","tabContent","tabs","Children","map","children","tab","type","displayName","push","createElement","key","selected","undefined","cloneElement","selectedColor","tintColor","handleTouchTap","Item","propTypes","object","string","number"],"mappings":"AAKA,a,q2BAEA,4B,2CACA,qC,mDACA,4C,qDACA,oD,6DACA,gD,o4BAEMA,O,wYACJC,K,CAAQ,CACNC,cAAe,CADT,C,gHAoBI,CACV,MAAO,4BAAWC,MAAX,CAAkB,CACvBC,UAAW,CACTC,MAAO,MADE,CAETC,OAAQ,KAAKC,KAAL,CAAWC,YAAX,EAA2BC,SAASC,eAAT,CAAyBF,YAFnD,CAGTG,SAAU,UAHD,CAITC,SAAU,QAJD,CADY,CAOvBC,QAAS,CACPR,MAAO,MADA,CAEPC,OAAQ,MAFD,CAPc,CAWvBQ,IAAK,CACHT,MAAO,MADJ,CAEHM,SAAU,UAFP,CAGHI,QAAS,CAHN,CAIHC,OAAQ,CAJL,CAKHC,UAAW,MALR,CAMHC,KAAM,CANH,CAOHC,OAAQ,CAPL,CASHC,gBAAiB,uBATd,CAUHC,QAAS,OAVN,CAXkB,CAAlB,CAAP,CAwBD,C,sDAEcC,K,CAAO,CACpB,KAAKC,QAAL,CAAc,CACZrB,cAAeoB,KADH,CAAd,EAGD,C,uCAEQ,CACP,GAAIE,MAAO,IAAX,CACA,GAAIC,QAASD,KAAKE,SAAL,EAAb,CACA,GAAIC,sBACCF,OAAOX,GADR,CAEC,KAAKP,KAAL,CAAWqB,KAAX,EAAoB,EAFrB,CAGC,KAAKrB,KAAL,CAAWsB,YAAX,CAA0B,CAACT,gBAAiB,KAAKb,KAAL,CAAWsB,YAA7B,CAA1B,CAAuE,EAHxE,CAAJ,CAMA,GAAIC,YAAa,EAAjB,CAEA,GAAIC,MAAO,gBAAMC,QAAN,CAAeC,GAAf,CAAmB,KAAK1B,KAAL,CAAW2B,QAA9B,CAAwC,SAACC,GAAD,CACjDb,KADiD,CACvC,CACV,GAAIa,IAAIC,IAAJ,CAASC,WAAT,GAAyB,YAA7B,CAA2C,CACzC,GAAIF,IAAI5B,KAAJ,CAAU2B,QAAd,CAAwB,CACtBJ,WAAWQ,IAAX,CAAgB,gBAAMC,aAAN,0BAAoC,CAClDC,IAAKlB,KAD6C,CAElDmB,SAAUjB,KAAKvB,KAAL,CAAWC,aAAX,GAA6BoB,KAFW,CAApC,CAGba,IAAI5B,KAAJ,CAAU2B,QAHG,CAAhB,EAID,CALD,IAKO,CACLJ,WAAWQ,IAAX,CAAgBI,SAAhB,EACD,CAED,MAAO,iBAAMC,YAAN,CAAmBR,GAAnB,CAAwB,CAC7Bb,MAAOA,KADsB,CAE7BmB,SAAUjB,KAAKvB,KAAL,CAAWC,aAAX,GAA6BoB,KAFV,CAG7BsB,cAAepB,KAAKjB,KAAL,CAAWsC,SAHG,CAI7BC,eAAgBtB,KAAKsB,cAJQ,CAAxB,CAAP,CAOD,CAjBD,IAiBO,CACL,GAAIV,MAAOD,IAAIC,IAAJ,CAASC,WAAT,EAAwBF,IAAIC,IAAvC,CACA,KAAM,iEAAmEA,IAAnE,CAA0E,mBAA1E,EAAiGd,MAAQ,CAAzG,EAA8G,YAApH,CACD,CACF,CAvBU,CAAX,CAyBA,MACE,qDAAM,MAAOG,OAAOrB,SAApB,kDACE,oDAAM,MAAOqB,OAAOZ,OAApB,kDAA8BiB,UAA9B,CADF,CAEE,oCAAI,MAAOH,QAAX,kDACGI,IADH,CAFF,CADF,CAQD,C,sCAlGG/B,M,CAKG+C,I,sBALH/C,M,CAOGgD,S,CAAY,CACjBpB,MAAO,oBAAUqB,MADA,CAKjBJ,UAAW,oBAAUK,MALJ,CASjBrB,aAAc,oBAAUqB,MATP,CAWjB1C,aAAc,oBAAU2C,MAXP,C,iBA8FNnD,M","file":"TabBar.web.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Alibaba Group Holding Limited.\n * All rights reserved.\n *\n */\n'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport TabBarItem from './TabBarItem.web';\nimport TabBarContents from './TabBarContents.web';\nimport {View, StyleSheet} from 'react-native-web';\n\nclass TabBar extends Component {\n  state = {\n    selectedIndex: 0\n  }\n\n  static Item = TabBarItem\n\n  static propTypes = {\n    style: PropTypes.object,\n    /**\n     * Color of the currently selected tab icon\n     */\n    tintColor: PropTypes.string,\n    /**\n     * Background color of the tab bar\n     */\n    barTintColor: PropTypes.string,\n\n    clientHeight: PropTypes.number\n  }\n\n  getStyles() {\n    return StyleSheet.create({\n      container: {\n        width: '100%',\n        height: this.props.clientHeight || document.documentElement.clientHeight,\n        position: 'relative',\n        overflow: 'hidden'\n      },\n      content: {\n        width: '100%',\n        height: '100%'\n      },\n      bar: {\n        width: '100%',\n        position: 'absolute',\n        padding: 0,\n        margin: 0,\n        listStyle: 'none',\n        left: 0,\n        bottom: 0,\n        // borderTop: '1px solid #e1e1e1',\n        backgroundColor: 'rgba(250,250,250,.96)',\n        display: 'table'\n      }\n    });\n  }\n\n  handleTouchTap(index) {\n    this.setState({\n      selectedIndex: index\n    });\n  }\n\n  render() {\n    let self = this;\n    let styles = self.getStyles();\n    let barStyle = {\n      ...styles.bar,\n      ...this.props.style || {},\n      ...this.props.barTintColor ? {backgroundColor: this.props.barTintColor} : {}\n    };\n\n    let tabContent = [];\n\n    let tabs = React.Children.map(this.props.children, (tab,\n      index) => {\n      if (tab.type.displayName === 'TabBarItem') {\n        if (tab.props.children) {\n          tabContent.push(React.createElement(TabBarContents, {\n            key: index,\n            selected: self.state.selectedIndex === index\n          }, tab.props.children));\n        } else {\n          tabContent.push(undefined);\n        }\n\n        return React.cloneElement(tab, {\n          index: index,\n          selected: self.state.selectedIndex === index,\n          selectedColor: self.props.tintColor,\n          handleTouchTap: self.handleTouchTap\n        });\n\n      } else {\n        let type = tab.type.displayName || tab.type;\n        throw 'Tabbar only accepts TabBar.Item Components as children. Found ' + type + ' as child number ' + (index + 1) + ' of Tabbar';\n      }\n    });\n\n    return (\n      <View style={styles.container}>\n        <View style={styles.content}>{tabContent}</View>\n        <ul style={barStyle}>\n          {tabs}\n        </ul>\n      </View>\n    );\n  }\n}\n\nexport default TabBar;\n"]}