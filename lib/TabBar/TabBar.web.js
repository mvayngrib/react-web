





'use strict';Object.defineProperty(exports,"__esModule",{value:true});

var _react=require('react');var _react2=_interopRequireDefault(_react);
var _ReactView=require('../View/View.web');var _ReactView2=_interopRequireDefault(_ReactView);
var _TabBarItem=require('./TabBarItem.web');var _TabBarItem2=_interopRequireDefault(_TabBarItem);
var _TabBarContents=require('./TabBarContents.web');var _TabBarContents2=_interopRequireDefault(_TabBarContents);
var _objectAssign=require('object-assign');var _objectAssign2=_interopRequireDefault(_objectAssign);
var _ReactStyleSheet=require('../StyleSheet/StyleSheet.web');var _ReactStyleSheet2=_interopRequireDefault(_ReactStyleSheet);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

var TabBar=_react2.default.createClass({displayName:'TabBar',
getInitialState:function getInitialState(){
return{
selectedIndex:0};

},

statics:{
Item:_TabBarItem2.default},


propTypes:{
style:_react2.default.PropTypes.object,



tintColor:_react2.default.PropTypes.string,



barTintColor:_react2.default.PropTypes.string,

clientHeight:_react2.default.PropTypes.number},


getStyles:function getStyles(){
return _ReactStyleSheet2.default.create({
container:{
width:'100%',
height:this.props.clientHeight||document.documentElement.clientHeight,
position:'relative',
overflow:'hidden'},

content:{
width:'100%',
height:'100%'},

bar:{
width:'100%',
position:'absolute',
padding:0,
margin:0,
listStyle:'none',
left:0,
bottom:0,

backgroundColor:'rgba(250,250,250,.96)',
display:'table'}});


},

handleTouchTap:function handleTouchTap(index){
this.setState({
selectedIndex:index});

},

render:function render(){
var self=this;
var styles=self.getStyles();
var barStyle=(0,_objectAssign2.default)(styles.bar,this.props.style||{},this.props.barTintColor?{
backgroundColor:this.props.barTintColor}:
{});

var tabContent=[];

var tabs=_react2.default.Children.map(this.props.children,function(tab,
index){
if(tab.type.displayName==='TabBarItem'){
if(tab.props.children){
tabContent.push(_react2.default.createElement(_TabBarContents2.default,{
key:index,
selected:self.state.selectedIndex===index},
tab.props.children));
}else{
tabContent.push(undefined);
}

return _react2.default.cloneElement(tab,{
index:index,
selected:self.state.selectedIndex===index,
selectedColor:self.props.tintColor,
handleTouchTap:self.handleTouchTap});


}else{
var type=tab.type.displayName||tab.type;
throw'Tabbar only accepts TabBar.Item Components as children. Found '+type+' as child number '+(index+1)+' of Tabbar';
}
});

return(
_react2.default.createElement(_ReactView2.default,{style:styles.container},
_react2.default.createElement(_ReactView2.default,{style:styles.content},tabContent),
_react2.default.createElement('ul',{style:barStyle},
tabs)));



}});


TabBar.isReactNativeComponent=true;exports.default=

TabBar;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRhYkJhci53ZWIuanMiXSwibmFtZXMiOlsiVGFiQmFyIiwiY3JlYXRlQ2xhc3MiLCJnZXRJbml0aWFsU3RhdGUiLCJzZWxlY3RlZEluZGV4Iiwic3RhdGljcyIsIkl0ZW0iLCJwcm9wVHlwZXMiLCJzdHlsZSIsIlByb3BUeXBlcyIsIm9iamVjdCIsInRpbnRDb2xvciIsInN0cmluZyIsImJhclRpbnRDb2xvciIsImNsaWVudEhlaWdodCIsIm51bWJlciIsImdldFN0eWxlcyIsImNyZWF0ZSIsImNvbnRhaW5lciIsIndpZHRoIiwiaGVpZ2h0IiwicHJvcHMiLCJkb2N1bWVudCIsImRvY3VtZW50RWxlbWVudCIsInBvc2l0aW9uIiwib3ZlcmZsb3ciLCJjb250ZW50IiwiYmFyIiwicGFkZGluZyIsIm1hcmdpbiIsImxpc3RTdHlsZSIsImxlZnQiLCJib3R0b20iLCJiYWNrZ3JvdW5kQ29sb3IiLCJkaXNwbGF5IiwiaGFuZGxlVG91Y2hUYXAiLCJpbmRleCIsInNldFN0YXRlIiwicmVuZGVyIiwic2VsZiIsInN0eWxlcyIsImJhclN0eWxlIiwidGFiQ29udGVudCIsInRhYnMiLCJDaGlsZHJlbiIsIm1hcCIsImNoaWxkcmVuIiwidGFiIiwidHlwZSIsImRpc3BsYXlOYW1lIiwicHVzaCIsImNyZWF0ZUVsZW1lbnQiLCJrZXkiLCJzZWxlY3RlZCIsInN0YXRlIiwidW5kZWZpbmVkIiwiY2xvbmVFbGVtZW50Iiwic2VsZWN0ZWRDb2xvciIsImlzUmVhY3ROYXRpdmVDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQU1BLGE7O0FBRUEsNEI7QUFDQSwyQztBQUNBLDRDO0FBQ0Esb0Q7QUFDQSwyQztBQUNBLDZEOztBQUVBLEdBQUlBLFFBQVMsZ0JBQU1DLFdBQU4sQ0FBa0I7QUFDN0JDLGVBRDZCLDJCQUNYO0FBQ2hCLE1BQU87QUFDTEMsY0FBZSxDQURWLENBQVA7O0FBR0QsQ0FMNEI7O0FBTzdCQyxRQUFTO0FBQ1BDLHlCQURPLENBUG9COzs7QUFXN0JDLFVBQVc7QUFDVEMsTUFBTyxnQkFBTUMsU0FBTixDQUFnQkMsTUFEZDs7OztBQUtUQyxVQUFXLGdCQUFNRixTQUFOLENBQWdCRyxNQUxsQjs7OztBQVNUQyxhQUFjLGdCQUFNSixTQUFOLENBQWdCRyxNQVRyQjs7QUFXVEUsYUFBYyxnQkFBTUwsU0FBTixDQUFnQk0sTUFYckIsQ0FYa0I7OztBQXlCN0JDLFNBekI2QixxQkF5QmpCO0FBQ1YsTUFBTywyQkFBV0MsTUFBWCxDQUFrQjtBQUN2QkMsVUFBVztBQUNUQyxNQUFPLE1BREU7QUFFVEMsT0FBUSxLQUFLQyxLQUFMLENBQVdQLFlBQVgsRUFBMkJRLFNBQVNDLGVBQVQsQ0FBeUJULFlBRm5EO0FBR1RVLFNBQVUsVUFIRDtBQUlUQyxTQUFVLFFBSkQsQ0FEWTs7QUFPdkJDLFFBQVM7QUFDUFAsTUFBTyxNQURBO0FBRVBDLE9BQVEsTUFGRCxDQVBjOztBQVd2Qk8sSUFBSztBQUNIUixNQUFPLE1BREo7QUFFSEssU0FBVSxVQUZQO0FBR0hJLFFBQVMsQ0FITjtBQUlIQyxPQUFRLENBSkw7QUFLSEMsVUFBVyxNQUxSO0FBTUhDLEtBQU0sQ0FOSDtBQU9IQyxPQUFRLENBUEw7O0FBU0hDLGdCQUFpQix1QkFUZDtBQVVIQyxRQUFTLE9BVk4sQ0FYa0IsQ0FBbEIsQ0FBUDs7O0FBd0JELENBbEQ0Qjs7QUFvRDdCQyxjQXBENkIseUJBb0RkQyxLQXBEYyxDQW9EUDtBQUNwQixLQUFLQyxRQUFMLENBQWM7QUFDWmpDLGNBQWVnQyxLQURILENBQWQ7O0FBR0QsQ0F4RDRCOztBQTBEN0JFLE1BMUQ2QixrQkEwRHBCO0FBQ1AsR0FBSUMsTUFBTyxJQUFYO0FBQ0EsR0FBSUMsUUFBU0QsS0FBS3ZCLFNBQUwsRUFBYjtBQUNBLEdBQUl5QixVQUFXLDJCQUFPRCxPQUFPYixHQUFkLENBQW1CLEtBQUtOLEtBQUwsQ0FBV2IsS0FBWCxFQUFvQixFQUF2QyxDQUEyQyxLQUFLYSxLQUFMLENBQVdSLFlBQVgsQ0FBMEI7QUFDbEZvQixnQkFBaUIsS0FBS1osS0FBTCxDQUFXUixZQURzRCxDQUExQjtBQUV0RCxFQUZXLENBQWY7O0FBSUEsR0FBSTZCLFlBQWEsRUFBakI7O0FBRUEsR0FBSUMsTUFBTyxnQkFBTUMsUUFBTixDQUFlQyxHQUFmLENBQW1CLEtBQUt4QixLQUFMLENBQVd5QixRQUE5QixDQUF3QyxTQUFDQyxHQUFEO0FBQ25EWCxLQURtRCxDQUN6QztBQUNSLEdBQUlXLElBQUlDLElBQUosQ0FBU0MsV0FBVCxHQUF5QixZQUE3QixDQUEyQztBQUN6QyxHQUFJRixJQUFJMUIsS0FBSixDQUFVeUIsUUFBZCxDQUF3QjtBQUN0QkosV0FBV1EsSUFBWCxDQUFnQixnQkFBTUMsYUFBTiwwQkFBb0M7QUFDbERDLElBQUtoQixLQUQ2QztBQUVsRGlCLFNBQVVkLEtBQUtlLEtBQUwsQ0FBV2xELGFBQVgsR0FBNkJnQyxLQUZXLENBQXBDO0FBR2JXLElBQUkxQixLQUFKLENBQVV5QixRQUhHLENBQWhCO0FBSUQsQ0FMRCxJQUtPO0FBQ0xKLFdBQVdRLElBQVgsQ0FBZ0JLLFNBQWhCO0FBQ0Q7O0FBRUQsTUFBTyxpQkFBTUMsWUFBTixDQUFtQlQsR0FBbkIsQ0FBd0I7QUFDN0JYLE1BQU9BLEtBRHNCO0FBRTdCaUIsU0FBVWQsS0FBS2UsS0FBTCxDQUFXbEQsYUFBWCxHQUE2QmdDLEtBRlY7QUFHN0JxQixjQUFlbEIsS0FBS2xCLEtBQUwsQ0FBV1YsU0FIRztBQUk3QndCLGVBQWdCSSxLQUFLSixjQUpRLENBQXhCLENBQVA7OztBQU9ELENBakJELElBaUJPO0FBQ0wsR0FBSWEsTUFBT0QsSUFBSUMsSUFBSixDQUFTQyxXQUFULEVBQXdCRixJQUFJQyxJQUF2QztBQUNBLEtBQU0saUVBQW1FQSxJQUFuRSxDQUEwRSxtQkFBMUUsRUFBaUdaLE1BQVEsQ0FBekcsRUFBOEcsWUFBcEg7QUFDRDtBQUNGLENBdkJVLENBQVg7O0FBeUJBO0FBQ0UsbURBQU0sTUFBT0ksT0FBT3RCLFNBQXBCO0FBQ0UsbURBQU0sTUFBT3NCLE9BQU9kLE9BQXBCLEVBQThCZ0IsVUFBOUIsQ0FERjtBQUVFLG9DQUFJLE1BQU9ELFFBQVg7QUFDR0UsSUFESCxDQUZGLENBREY7Ozs7QUFRRCxDQXBHNEIsQ0FBbEIsQ0FBYjs7O0FBdUdBMUMsT0FBT3lELHNCQUFQLENBQWdDLElBQWhDLEM7O0FBRWV6RCxNIiwiZmlsZSI6IlRhYkJhci53ZWIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBBbGliYWJhIEdyb3VwIEhvbGRpbmcgTGltaXRlZC5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIFJlYWN0VGFiQmFyXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBWaWV3IGZyb20gJ1JlYWN0Vmlldyc7XG5pbXBvcnQgVGFiQmFySXRlbSBmcm9tICcuL1RhYkJhckl0ZW0ud2ViJztcbmltcG9ydCBUYWJCYXJDb250ZW50cyBmcm9tICcuL1RhYkJhckNvbnRlbnRzLndlYic7XG5pbXBvcnQgYXNzaWduIGZyb20gJ29iamVjdC1hc3NpZ24nO1xuaW1wb3J0IFN0eWxlU2hlZXQgZnJvbSAnUmVhY3RTdHlsZVNoZWV0JztcblxubGV0IFRhYkJhciA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgZ2V0SW5pdGlhbFN0YXRlKCkge1xuICAgIHJldHVybiB7XG4gICAgICBzZWxlY3RlZEluZGV4OiAwXG4gICAgfTtcbiAgfSxcblxuICBzdGF0aWNzOiB7XG4gICAgSXRlbTogVGFiQmFySXRlbVxuICB9LFxuXG4gIHByb3BUeXBlczoge1xuICAgIHN0eWxlOiBSZWFjdC5Qcm9wVHlwZXMub2JqZWN0LFxuICAgIC8qKlxuICAgICAqIENvbG9yIG9mIHRoZSBjdXJyZW50bHkgc2VsZWN0ZWQgdGFiIGljb25cbiAgICAgKi9cbiAgICB0aW50Q29sb3I6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXG4gICAgLyoqXG4gICAgICogQmFja2dyb3VuZCBjb2xvciBvZiB0aGUgdGFiIGJhclxuICAgICAqL1xuICAgIGJhclRpbnRDb2xvcjogUmVhY3QuUHJvcFR5cGVzLnN0cmluZyxcblxuICAgIGNsaWVudEhlaWdodDogUmVhY3QuUHJvcFR5cGVzLm51bWJlclxuICB9LFxuXG4gIGdldFN0eWxlcygpIHtcbiAgICByZXR1cm4gU3R5bGVTaGVldC5jcmVhdGUoe1xuICAgICAgY29udGFpbmVyOiB7XG4gICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgIGhlaWdodDogdGhpcy5wcm9wcy5jbGllbnRIZWlnaHQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCxcbiAgICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgICAgIG92ZXJmbG93OiAnaGlkZGVuJ1xuICAgICAgfSxcbiAgICAgIGNvbnRlbnQ6IHtcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgaGVpZ2h0OiAnMTAwJSdcbiAgICAgIH0sXG4gICAgICBiYXI6IHtcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgIHBhZGRpbmc6IDAsXG4gICAgICAgIG1hcmdpbjogMCxcbiAgICAgICAgbGlzdFN0eWxlOiAnbm9uZScsXG4gICAgICAgIGxlZnQ6IDAsXG4gICAgICAgIGJvdHRvbTogMCxcbiAgICAgICAgLy8gYm9yZGVyVG9wOiAnMXB4IHNvbGlkICNlMWUxZTEnLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDI1MCwyNTAsMjUwLC45NiknLFxuICAgICAgICBkaXNwbGF5OiAndGFibGUnXG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG5cbiAgaGFuZGxlVG91Y2hUYXAoaW5kZXgpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIHNlbGVjdGVkSW5kZXg6IGluZGV4XG4gICAgfSk7XG4gIH0sXG5cbiAgcmVuZGVyKCkge1xuICAgIGxldCBzZWxmID0gdGhpcztcbiAgICBsZXQgc3R5bGVzID0gc2VsZi5nZXRTdHlsZXMoKTtcbiAgICBsZXQgYmFyU3R5bGUgPSBhc3NpZ24oc3R5bGVzLmJhciwgdGhpcy5wcm9wcy5zdHlsZSB8fCB7fSwgdGhpcy5wcm9wcy5iYXJUaW50Q29sb3IgPyB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoaXMucHJvcHMuYmFyVGludENvbG9yXG4gICAgfSA6IHt9KTtcblxuICAgIGxldCB0YWJDb250ZW50ID0gW107XG5cbiAgICBsZXQgdGFicyA9IFJlYWN0LkNoaWxkcmVuLm1hcCh0aGlzLnByb3BzLmNoaWxkcmVuLCAodGFiLFxuICAgIGluZGV4KSA9PiB7XG4gICAgICBpZiAodGFiLnR5cGUuZGlzcGxheU5hbWUgPT09ICdUYWJCYXJJdGVtJykge1xuICAgICAgICBpZiAodGFiLnByb3BzLmNoaWxkcmVuKSB7XG4gICAgICAgICAgdGFiQ29udGVudC5wdXNoKFJlYWN0LmNyZWF0ZUVsZW1lbnQoVGFiQmFyQ29udGVudHMsIHtcbiAgICAgICAgICAgIGtleTogaW5kZXgsXG4gICAgICAgICAgICBzZWxlY3RlZDogc2VsZi5zdGF0ZS5zZWxlY3RlZEluZGV4ID09PSBpbmRleFxuICAgICAgICAgIH0sIHRhYi5wcm9wcy5jaGlsZHJlbikpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRhYkNvbnRlbnQucHVzaCh1bmRlZmluZWQpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIFJlYWN0LmNsb25lRWxlbWVudCh0YWIsIHtcbiAgICAgICAgICBpbmRleDogaW5kZXgsXG4gICAgICAgICAgc2VsZWN0ZWQ6IHNlbGYuc3RhdGUuc2VsZWN0ZWRJbmRleCA9PT0gaW5kZXgsXG4gICAgICAgICAgc2VsZWN0ZWRDb2xvcjogc2VsZi5wcm9wcy50aW50Q29sb3IsXG4gICAgICAgICAgaGFuZGxlVG91Y2hUYXA6IHNlbGYuaGFuZGxlVG91Y2hUYXBcbiAgICAgICAgfSk7XG5cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCB0eXBlID0gdGFiLnR5cGUuZGlzcGxheU5hbWUgfHwgdGFiLnR5cGU7XG4gICAgICAgIHRocm93ICdUYWJiYXIgb25seSBhY2NlcHRzIFRhYkJhci5JdGVtIENvbXBvbmVudHMgYXMgY2hpbGRyZW4uIEZvdW5kICcgKyB0eXBlICsgJyBhcyBjaGlsZCBudW1iZXIgJyArIChpbmRleCArIDEpICsgJyBvZiBUYWJiYXInO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuY29udGFpbmVyfT5cbiAgICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jb250ZW50fT57dGFiQ29udGVudH08L1ZpZXc+XG4gICAgICAgIDx1bCBzdHlsZT17YmFyU3R5bGV9PlxuICAgICAgICAgIHt0YWJzfVxuICAgICAgICA8L3VsPlxuICAgICAgPC9WaWV3PlxuICAgICk7XG4gIH1cbn0pO1xuXG5UYWJCYXIuaXNSZWFjdE5hdGl2ZUNvbXBvbmVudCA9IHRydWU7XG5cbmV4cG9ydCBkZWZhdWx0IFRhYkJhcjtcbiJdfQ==