{"version":3,"sources":["DatePicker.web.js"],"names":["_toMillis","options","key","dateVal","getMonth","getTime","DatePicker","optionsMs"],"mappings":"AAOA,a,2lCAKA,QAASA,UAAT,CAAmBC,OAAnB,CAAoCC,GAApC,CAAiD,CAC/C,GAAMC,SAAUF,QAAQC,GAAR,CAAhB,CAEA,GAAI,MAAOC,QAAP,GAAmB,QAAnB,EAA+B,MAAOA,SAAQC,QAAf,GAA4B,UAA/D,CAA2E,CACzEH,QAAQC,GAAR,EAAeC,QAAQE,OAAR,EAAf,CACD,CACF,C,GAsBKC,W,mMAiBcL,O,+HACZM,S,CAAYN,O,CAChB,GAAIM,SAAJ,CAAe,CACbP,UAAUC,OAAV,CAAmB,MAAnB,EACAD,UAAUC,OAAV,CAAmB,SAAnB,EACAD,UAAUC,OAAV,CAAmB,SAAnB,EACD,C,2KAOwB,CAAE,MAAO,eAAP,CAAyB,C,2CAIzB,CAAE,MAAO,iBAAP,CAA2B,C,0CAG7CK,U","file":"DatePicker.web.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Alibaba Group Holding Limited.\n * All rights reserved.\n *\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n */\n'use strict';\n\n/**\n * Convert a Date to a timestamp.\n */\nfunction _toMillis(options: Object, key: string) {\n  const dateVal = options[key];\n  // Is it a Date object?\n  if (typeof dateVal === 'object' && typeof dateVal.getMonth === 'function') {\n    options[key] = dateVal.getTime();\n  }\n}\n\n/**\n * Opens the standard Android date picker dialog.\n *\n * ### Example\n *\n * ```\n * try {\n *   const {action, year, month, day} = await DatePickerAndroid.open({\n *     // Use `new Date()` for current date.\n *     // May 25 2020. Month 0 is January.\n *     date: new Date(2020, 4, 25)\n *   });\n *   if (action !== DatePickerAndroid.dismissedAction) {\n *     // Selected year, month (0-11), day\n *   }\n * } catch ({code, message}) {\n *   console.warn('Cannot open date picker', message);\n * }\n * ```\n */\nclass DatePicker {\n  /**\n   * Opens the standard Android date picker dialog.\n   *\n   * The available keys for the `options` object are:\n   *   * `date` (`Date` object or timestamp in milliseconds) - date to show by default\n   *   * `minDate` (`Date` or timestamp in milliseconds) - minimum date that can be selected\n   *   * `maxDate` (`Date` object or timestamp in milliseconds) - minimum date that can be selected\n   *\n   * Returns a Promise which will be invoked an object containing `action`, `year`, `month` (0-11),\n   * `day` if the user picked a date. If the user dismissed the dialog, the Promise will\n   * still be resolved with action being `DatePickerAndroid.dismissedAction` and all the other keys\n   * being undefined. **Always** check whether the `action` before reading the values.\n   *\n   * Note the native date picker dialog has some UI glitches on Android 4 and lower\n   * when using the `minDate` and `maxDate` options.\n   */\n  static async open(options: Object): Promise<Object> {\n    let optionsMs = options;\n    if (optionsMs) {\n      _toMillis(options, 'date');\n      _toMillis(options, 'minDate');\n      _toMillis(options, 'maxDate');\n    }\n    // TODO\n  }\n\n  /**\n   * A date has been selected.\n   */\n  static get dateSetAction() { return 'dateSetAction'; }\n  /**\n   * The dialog has been dismissed.\n   */\n  static get dismissedAction() { return 'dismissedAction'; }\n}\n\nexport default DatePicker;\n"]}