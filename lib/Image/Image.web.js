





'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();

var _react=require('react');var _react2=_interopRequireDefault(_react);
var _ReactView=require('../View/View.web');var _ReactView2=_interopRequireDefault(_ReactView);
var _ReactLayoutMixin=require('../Utilties/LayoutMixin');
var _ImageResizeMode=require('./ImageResizeMode');var _ImageResizeMode2=_interopRequireDefault(_ImageResizeMode);
var _NativeMethodsMixin=require('../Utilties/NativeMethodsMixin.web');
var _reactMixin=require('react-mixin');var _reactMixin2=_interopRequireDefault(_reactMixin);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var

Image=function(_Component){_inherits(Image,_Component);function Image(){_classCallCheck(this,Image);return _possibleConstructorReturn(this,(Image.__proto__||Object.getPrototypeOf(Image)).apply(this,arguments));}_createClass(Image,[{key:'render',value:function render()



































{

var props=_extends({},this.props);
props.src=typeof props.source==='string'?props.source:props.source.uri;



var resizeMode=this.props.resizeMode;


if((this.props.children||resizeMode&&resizeMode!=='stretch')&&!this.context.isInAParentText){
var containerStyles=props.style?props.style:{};
containerStyles.backgroundImage='url("'+props.src+'")';
containerStyles.backgroundSize=resizeMode||'cover';
containerStyles.backgroundRepeat='no-repeat';
containerStyles.backgroundPosition='50%';

return(
_react2.default.createElement(_ReactView2.default,{style:containerStyles,'data-src':props.src},
this.props.children));


}else{
return(
_react2.default.createElement('img',props));

}
}}]);return Image;}(_react.Component);Image.resizeMode=_ImageResizeMode2.default;Image.contextTypes={isInAParentText:_react2.default.PropTypes.bool};Image.getSize=function(url,success,failure){var wrap=document.createElement('div'),img=new window.Image(),loadedHandler=function loadedHandler(){img.removeEventListener('load',loadedHandler);success&&success(img.offsetWidth,img.offsetHeight);},errorHandler=function errorHandler(){img.removeEventListener('error',errorHandler);failure&&failure();};wrap.style.cssText='height:0px;width:0px;overflow:hidden;visibility:hidden;';wrap.appendChild(img);document.body.appendChild(wrap);img.src=url;if(!img.complete){img.addEventListener('error',errorHandler);img.addEventListener('load',loadedHandler);}else{loadedHandler();}};


_reactMixin2.default.onClass(Image,_ReactLayoutMixin.Mixin);
_reactMixin2.default.onClass(Image,_NativeMethodsMixin.Mixin);

Image.isReactNativeComponent=true;exports.default=

Image;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkltYWdlLndlYi5qcyJdLCJuYW1lcyI6WyJJbWFnZSIsInByb3BzIiwic3JjIiwic291cmNlIiwidXJpIiwicmVzaXplTW9kZSIsImNoaWxkcmVuIiwiY29udGV4dCIsImlzSW5BUGFyZW50VGV4dCIsImNvbnRhaW5lclN0eWxlcyIsInN0eWxlIiwiYmFja2dyb3VuZEltYWdlIiwiYmFja2dyb3VuZFNpemUiLCJiYWNrZ3JvdW5kUmVwZWF0IiwiYmFja2dyb3VuZFBvc2l0aW9uIiwiY29udGV4dFR5cGVzIiwiUHJvcFR5cGVzIiwiYm9vbCIsImdldFNpemUiLCJ1cmwiLCJzdWNjZXNzIiwiZmFpbHVyZSIsIndyYXAiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJpbWciLCJ3aW5kb3ciLCJsb2FkZWRIYW5kbGVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIm9mZnNldFdpZHRoIiwib2Zmc2V0SGVpZ2h0IiwiZXJyb3JIYW5kbGVyIiwiY3NzVGV4dCIsImFwcGVuZENoaWxkIiwiYm9keSIsImNvbXBsZXRlIiwiYWRkRXZlbnRMaXN0ZW5lciIsIm9uQ2xhc3MiLCJpc1JlYWN0TmF0aXZlQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFNQSxhOztBQUVBLDRCO0FBQ0EsMkM7QUFDQTtBQUNBLGtEO0FBQ0E7QUFDQSx1Qzs7QUFFTUEsSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBb0NLOztBQUVQLEdBQUlDLG1CQUFZLEtBQUtBLEtBQWpCLENBQUo7QUFDQUEsTUFBTUMsR0FBTixDQUFZLE1BQU9ELE9BQU1FLE1BQWIsR0FBd0IsUUFBeEIsQ0FBbUNGLE1BQU1FLE1BQXpDLENBQWtERixNQUFNRSxNQUFOLENBQWFDLEdBQTNFOzs7O0FBSUEsR0FBSUMsWUFBYSxLQUFLSixLQUFMLENBQVdJLFVBQTVCOzs7QUFHQSxHQUFLLENBQUMsS0FBS0osS0FBTCxDQUFXSyxRQUFYLEVBQXdCRCxZQUFjQSxhQUFlLFNBQXRELEdBQXFFLENBQUMsS0FBS0UsT0FBTCxDQUFhQyxlQUF4RixDQUF5RztBQUN2RyxHQUFJQyxpQkFBa0JSLE1BQU1TLEtBQU4sQ0FBY1QsTUFBTVMsS0FBcEIsQ0FBNEIsRUFBbEQ7QUFDQUQsZ0JBQWdCRSxlQUFoQixDQUFrQyxRQUFVVixNQUFNQyxHQUFoQixDQUFzQixJQUF4RDtBQUNBTyxnQkFBZ0JHLGNBQWhCLENBQWlDUCxZQUFjLE9BQS9DO0FBQ0FJLGdCQUFnQkksZ0JBQWhCLENBQW1DLFdBQW5DO0FBQ0FKLGdCQUFnQkssa0JBQWhCLENBQXFDLEtBQXJDOztBQUVBO0FBQ0UsbURBQU0sTUFBT0wsZUFBYixDQUE4QixXQUFVUixNQUFNQyxHQUE5QztBQUNHLEtBQUtELEtBQUwsQ0FBV0ssUUFEZCxDQURGOzs7QUFLRCxDQVpELElBWU87QUFDTDtBQUNFLG9DQUFTTCxLQUFULENBREY7O0FBR0Q7QUFDRixDLHFDQS9ER0QsSyxDQUNHSyxVLDJCQURITCxLLENBR0dlLFksQ0FBZSxDQUNwQlAsZ0JBQWlCLGdCQUFNUSxTQUFOLENBQWdCQyxJQURiLEMsQ0FIbEJqQixLLENBT0drQixPLENBQVUsU0FDZkMsR0FEZSxDQUVmQyxPQUZlLENBR2ZDLE9BSGUsQ0FJZixDQUNBLEdBQUlDLE1BQU9DLFNBQVNDLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBWCxDQUNFQyxJQUFNLEdBQUlDLFFBQU8xQixLQUFYLEVBRFIsQ0FFRTJCLGNBQWdCLFFBQVNBLGNBQVQsRUFBeUIsQ0FDdkNGLElBQUlHLG1CQUFKLENBQXdCLE1BQXhCLENBQWdDRCxhQUFoQyxFQUNBUCxTQUFXQSxRQUFRSyxJQUFJSSxXQUFaLENBQXlCSixJQUFJSyxZQUE3QixDQUFYLENBQ0QsQ0FMSCxDQU1FQyxhQUFlLFFBQVNBLGFBQVQsRUFBd0IsQ0FDckNOLElBQUlHLG1CQUFKLENBQXdCLE9BQXhCLENBQWlDRyxZQUFqQyxFQUNBVixTQUFXQSxTQUFYLENBQ0QsQ0FUSCxDQVdBQyxLQUFLWixLQUFMLENBQVdzQixPQUFYLENBQXFCLHlEQUFyQixDQUVBVixLQUFLVyxXQUFMLENBQWlCUixHQUFqQixFQUNBRixTQUFTVyxJQUFULENBQWNELFdBQWQsQ0FBMEJYLElBQTFCLEVBQ0FHLElBQUl2QixHQUFKLENBQVVpQixHQUFWLENBQ0EsR0FBSSxDQUFDTSxJQUFJVSxRQUFULENBQW1CLENBQ2pCVixJQUFJVyxnQkFBSixDQUFxQixPQUFyQixDQUE4QkwsWUFBOUIsRUFDQU4sSUFBSVcsZ0JBQUosQ0FBcUIsTUFBckIsQ0FBNkJULGFBQTdCLEVBQ0QsQ0FIRCxJQUdPLENBQ0xBLGdCQUNELENBQ0YsQzs7O0FBZ0NILHFCQUFNVSxPQUFOLENBQWNyQyxLQUFkO0FBQ0EscUJBQU1xQyxPQUFOLENBQWNyQyxLQUFkOztBQUVBQSxNQUFNc0Msc0JBQU4sQ0FBK0IsSUFBL0IsQzs7QUFFZXRDLEsiLCJmaWxlIjoiSW1hZ2Uud2ViLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgQWxpYmFiYSBHcm91cCBIb2xkaW5nIExpbWl0ZWQuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBSZWFjdEltYWdlXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgVmlldyBmcm9tICdSZWFjdFZpZXcnO1xuaW1wb3J0IHsgTWl4aW4gYXMgTGF5b3V0TWl4aW4gfSBmcm9tICdSZWFjdExheW91dE1peGluJztcbmltcG9ydCBJbWFnZVJlc2l6ZU1vZGUgZnJvbSAnLi9JbWFnZVJlc2l6ZU1vZGUnO1xuaW1wb3J0IHsgTWl4aW4gYXMgTmF0aXZlTWV0aG9kc01peGluIH0gZnJvbSAnTmF0aXZlTWV0aG9kc01peGluJztcbmltcG9ydCBtaXhpbiBmcm9tICdyZWFjdC1taXhpbic7XG5cbmNsYXNzIEltYWdlIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHJlc2l6ZU1vZGUgPSBJbWFnZVJlc2l6ZU1vZGVcblxuICBzdGF0aWMgY29udGV4dFR5cGVzID0ge1xuICAgIGlzSW5BUGFyZW50VGV4dDogUmVhY3QuUHJvcFR5cGVzLmJvb2xcbiAgfVxuXG4gIHN0YXRpYyBnZXRTaXplID0gZnVuY3Rpb24oXG4gICAgdXJsOiBzdHJpbmcsXG4gICAgc3VjY2VzczogKHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyKSA9PiB2b2lkLFxuICAgIGZhaWx1cmU6IChlcnJvcjogYW55KSA9PiB2b2lkLFxuICApIHtcbiAgICBsZXQgd3JhcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLFxuICAgICAgaW1nID0gbmV3IHdpbmRvdy5JbWFnZSgpLFxuICAgICAgbG9hZGVkSGFuZGxlciA9IGZ1bmN0aW9uIGxvYWRlZEhhbmRsZXIoKSB7XG4gICAgICAgIGltZy5yZW1vdmVFdmVudExpc3RlbmVyKCdsb2FkJywgbG9hZGVkSGFuZGxlcik7XG4gICAgICAgIHN1Y2Nlc3MgJiYgc3VjY2VzcyhpbWcub2Zmc2V0V2lkdGgsIGltZy5vZmZzZXRIZWlnaHQpO1xuICAgICAgfSxcbiAgICAgIGVycm9ySGFuZGxlciA9IGZ1bmN0aW9uIGVycm9ySGFuZGxlcigpIHtcbiAgICAgICAgaW1nLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgZXJyb3JIYW5kbGVyKTtcbiAgICAgICAgZmFpbHVyZSAmJiBmYWlsdXJlKCk7XG4gICAgICB9O1xuXG4gICAgd3JhcC5zdHlsZS5jc3NUZXh0ID0gJ2hlaWdodDowcHg7d2lkdGg6MHB4O292ZXJmbG93OmhpZGRlbjt2aXNpYmlsaXR5OmhpZGRlbjsnO1xuXG4gICAgd3JhcC5hcHBlbmRDaGlsZChpbWcpO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQod3JhcCk7XG4gICAgaW1nLnNyYyA9IHVybDtcbiAgICBpZiAoIWltZy5jb21wbGV0ZSkge1xuICAgICAgaW1nLmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgZXJyb3JIYW5kbGVyKTtcbiAgICAgIGltZy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgbG9hZGVkSGFuZGxlcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvYWRlZEhhbmRsZXIoKTtcbiAgICB9XG4gIH1cblxuICByZW5kZXIoKSB7XG5cbiAgICBsZXQgcHJvcHMgPSB7Li4udGhpcy5wcm9wc307XG4gICAgcHJvcHMuc3JjID0gdHlwZW9mIHByb3BzLnNvdXJjZSA9PT0gJ3N0cmluZycgPyBwcm9wcy5zb3VyY2UgOiBwcm9wcy5zb3VyY2UudXJpO1xuXG4gICAgLy8gVE9ETzogbGF6eWxvYWQgaW1hZ2Ugd2hlbiBub3QgaW4gdmlld3BvcnRcblxuICAgIGxldCByZXNpemVNb2RlID0gdGhpcy5wcm9wcy5yZXNpemVNb2RlO1xuXG4gICAgLy8gQmFja2dyb3VuZCBpbWFnZSBlbGVtZW50LCByZXNpemVNb2RlIGlzIHN0cnRjaCBpcyBlcXVhbCBkZWZhdWx0IGltZyBzdHlsZVxuICAgIGlmICggKHRoaXMucHJvcHMuY2hpbGRyZW4gfHwgKHJlc2l6ZU1vZGUgJiYgcmVzaXplTW9kZSAhPT0gJ3N0cmV0Y2gnKSkgJiYgIXRoaXMuY29udGV4dC5pc0luQVBhcmVudFRleHQpIHtcbiAgICAgIGxldCBjb250YWluZXJTdHlsZXMgPSBwcm9wcy5zdHlsZSA/IHByb3BzLnN0eWxlIDoge307XG4gICAgICBjb250YWluZXJTdHlsZXMuYmFja2dyb3VuZEltYWdlID0gJ3VybChcIicgKyBwcm9wcy5zcmMgKyAnXCIpJztcbiAgICAgIGNvbnRhaW5lclN0eWxlcy5iYWNrZ3JvdW5kU2l6ZSA9IHJlc2l6ZU1vZGUgfHwgJ2NvdmVyJztcbiAgICAgIGNvbnRhaW5lclN0eWxlcy5iYWNrZ3JvdW5kUmVwZWF0ID0gJ25vLXJlcGVhdCc7XG4gICAgICBjb250YWluZXJTdHlsZXMuYmFja2dyb3VuZFBvc2l0aW9uID0gJzUwJSc7XG5cbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxWaWV3IHN0eWxlPXtjb250YWluZXJTdHlsZXN9IGRhdGEtc3JjPXtwcm9wcy5zcmN9PlxuICAgICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICA8L1ZpZXc+XG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8aW1nIHsuLi5wcm9wc30vPlxuICAgICAgKTtcbiAgICB9XG4gIH1cbn1cblxubWl4aW4ub25DbGFzcyhJbWFnZSwgTGF5b3V0TWl4aW4pO1xubWl4aW4ub25DbGFzcyhJbWFnZSwgTmF0aXZlTWV0aG9kc01peGluKTtcblxuSW1hZ2UuaXNSZWFjdE5hdGl2ZUNvbXBvbmVudCA9IHRydWU7XG5cbmV4cG9ydCBkZWZhdWx0IEltYWdlO1xuIl19