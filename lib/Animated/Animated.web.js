









'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};

var _animated=require('animated');var _animated2=_interopRequireDefault(_animated);
var _CSSPropertyOperations=require('react/lib/CSSPropertyOperations');var _CSSPropertyOperations2=_interopRequireDefault(_CSSPropertyOperations);

var _ReactFlattenStyle=require('../StyleSheet/flattenStyle.web');var _ReactFlattenStyle2=_interopRequireDefault(_ReactFlattenStyle);
var _ReactImage=require('../Image/Image.web');var _ReactImage2=_interopRequireDefault(_ReactImage);
var _ReactText=require('../Text/Text.web');var _ReactText2=_interopRequireDefault(_ReactText);
var _ReactView=require('../View/View.web');var _ReactView2=_interopRequireDefault(_ReactView);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}


function mapTransform(t){
var k=Object.keys(t)[0];
return k+'('+t[k]+')';
}




function mapStyle(style){
if(style&&style.transform&&typeof style.transform!=='string'){

style.transform=style.transform.map(mapTransform).join(' ');
}
return style;
}

function ApplyAnimatedValues(instance,props){
if(instance.setNativeProps){
instance.setNativeProps(props);
}else if(instance.nodeType&&instance.setAttribute!==undefined){
_CSSPropertyOperations2.default.setValueForStyles(instance,mapStyle(props.style));
}else{
return false;
}
}


_animated2.default.inject.ApplyAnimatedValues(ApplyAnimatedValues);
_animated2.default.inject.FlattenStyle(_ReactFlattenStyle2.default);exports.default=_extends({},_animated2.default,{




View:_animated2.default.createAnimatedComponent(_ReactView2.default),
Text:_animated2.default.createAnimatedComponent(_ReactText2.default),
Image:_animated2.default.createAnimatedComponent(_ReactImage2.default)});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFuaW1hdGVkLndlYi5qcyJdLCJuYW1lcyI6WyJtYXBUcmFuc2Zvcm0iLCJ0IiwiayIsIk9iamVjdCIsImtleXMiLCJtYXBTdHlsZSIsInN0eWxlIiwidHJhbnNmb3JtIiwibWFwIiwiam9pbiIsIkFwcGx5QW5pbWF0ZWRWYWx1ZXMiLCJpbnN0YW5jZSIsInByb3BzIiwic2V0TmF0aXZlUHJvcHMiLCJub2RlVHlwZSIsInNldEF0dHJpYnV0ZSIsInVuZGVmaW5lZCIsInNldFZhbHVlRm9yU3R5bGVzIiwiaW5qZWN0IiwiRmxhdHRlblN0eWxlIiwiVmlldyIsImNyZWF0ZUFuaW1hdGVkQ29tcG9uZW50IiwiVGV4dCIsIkltYWdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBVUEsYTs7QUFFQSxrQztBQUNBLHNFOztBQUVBLGlFO0FBQ0EsOEM7QUFDQSwyQztBQUNBLDJDOzs7QUFHQSxRQUFTQSxhQUFULENBQXNCQyxDQUF0QixDQUF5QjtBQUN2QixHQUFJQyxHQUFJQyxPQUFPQyxJQUFQLENBQVlILENBQVosRUFBZSxDQUFmLENBQVI7QUFDQSxNQUFVQyxFQUFWLEtBQWVELEVBQUVDLENBQUYsQ0FBZjtBQUNEOzs7OztBQUtELFFBQVNHLFNBQVQsQ0FBa0JDLEtBQWxCLENBQXlCO0FBQ3ZCLEdBQUlBLE9BQVNBLE1BQU1DLFNBQWYsRUFBNEIsTUFBT0QsT0FBTUMsU0FBYixHQUEyQixRQUEzRCxDQUFxRTs7QUFFbkVELE1BQU1DLFNBQU4sQ0FBa0JELE1BQU1DLFNBQU4sQ0FBZ0JDLEdBQWhCLENBQW9CUixZQUFwQixFQUFrQ1MsSUFBbEMsQ0FBdUMsR0FBdkMsQ0FBbEI7QUFDRDtBQUNELE1BQU9ILE1BQVA7QUFDRDs7QUFFRCxRQUFTSSxvQkFBVCxDQUE2QkMsUUFBN0IsQ0FBdUNDLEtBQXZDLENBQThDO0FBQzVDLEdBQUlELFNBQVNFLGNBQWIsQ0FBNkI7QUFDM0JGLFNBQVNFLGNBQVQsQ0FBd0JELEtBQXhCO0FBQ0QsQ0FGRCxJQUVPLElBQUlELFNBQVNHLFFBQVQsRUFBcUJILFNBQVNJLFlBQVQsR0FBMEJDLFNBQW5ELENBQThEO0FBQ25FLGdDQUFzQkMsaUJBQXRCLENBQXdDTixRQUF4QyxDQUFrRE4sU0FBU08sTUFBTU4sS0FBZixDQUFsRDtBQUNELENBRk0sSUFFQTtBQUNMLE1BQU8sTUFBUDtBQUNEO0FBQ0Y7OztBQUdELG1CQUFTWSxNQUFULENBQWdCUixtQkFBaEIsQ0FBb0NBLG1CQUFwQztBQUNBLG1CQUFTUSxNQUFULENBQWdCQyxZQUFoQiw4Qjs7Ozs7QUFLRUMsS0FBTSxtQkFBU0MsdUJBQVQscUI7QUFDTkMsS0FBTSxtQkFBU0QsdUJBQVQscUI7QUFDTkUsTUFBTyxtQkFBU0YsdUJBQVQsc0IiLCJmaWxlIjoiQW5pbWF0ZWQud2ViLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgQWxpYmFiYSBHcm91cCBIb2xkaW5nIExpbWl0ZWQuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgUmVhY3RBbmltYXRlZFxuICogQGZsb3dcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgQW5pbWF0ZWQgZnJvbSAnYW5pbWF0ZWQnO1xuaW1wb3J0IENTU1Byb3BlcnR5T3BlcmF0aW9ucyBmcm9tICdyZWFjdC9saWIvQ1NTUHJvcGVydHlPcGVyYXRpb25zJztcblxuaW1wb3J0IGZsYXR0ZW5TdHlsZSBmcm9tICdSZWFjdEZsYXR0ZW5TdHlsZSc7XG5pbXBvcnQgSW1hZ2UgZnJvbSAnUmVhY3RJbWFnZSc7XG5pbXBvcnQgVGV4dCBmcm9tICdSZWFjdFRleHQnO1xuaW1wb3J0IFZpZXcgZnJvbSAnUmVhY3RWaWV3JztcblxuLy8geyBzY2FsZTogMiB9ID0+ICdzY2FsZSgyKSdcbmZ1bmN0aW9uIG1hcFRyYW5zZm9ybSh0KSB7XG4gIHZhciBrID0gT2JqZWN0LmtleXModClbMF07XG4gIHJldHVybiBgJHtrfSgke3Rba119KWA7XG59XG5cbi8vIE5PVEUobG1yKTpcbi8vIFNpbmNlIHRoaXMgaXMgYSBob3QgY29kZSBwYXRoLCByaWdodCBub3cgdGhpcyBpcyBtdXRhdGl2ZS4uLlxuLy8gQXMgZmFyIGFzIEkgY2FuIHRlbGwsIHRoaXMgc2hvdWxkbid0IGNhdXNlIGFueSB1bmV4cGVjdGVkIGJlaGF2aW9yLlxuZnVuY3Rpb24gbWFwU3R5bGUoc3R5bGUpIHtcbiAgaWYgKHN0eWxlICYmIHN0eWxlLnRyYW5zZm9ybSAmJiB0eXBlb2Ygc3R5bGUudHJhbnNmb3JtICE9PSAnc3RyaW5nJykge1xuICAgIC8vIFRPRE8obG1yKTogdGhpcyBkb2Vzbid0IGF0dGVtcHQgdG8gdXNlIHZlbmRvciBwcmVmaXhlZCBzdHlsZXNcbiAgICBzdHlsZS50cmFuc2Zvcm0gPSBzdHlsZS50cmFuc2Zvcm0ubWFwKG1hcFRyYW5zZm9ybSkuam9pbignICcpO1xuICB9XG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gQXBwbHlBbmltYXRlZFZhbHVlcyhpbnN0YW5jZSwgcHJvcHMpIHtcbiAgaWYgKGluc3RhbmNlLnNldE5hdGl2ZVByb3BzKSB7XG4gICAgaW5zdGFuY2Uuc2V0TmF0aXZlUHJvcHMocHJvcHMpO1xuICB9IGVsc2UgaWYgKGluc3RhbmNlLm5vZGVUeXBlICYmIGluc3RhbmNlLnNldEF0dHJpYnV0ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgQ1NTUHJvcGVydHlPcGVyYXRpb25zLnNldFZhbHVlRm9yU3R5bGVzKGluc3RhbmNlLCBtYXBTdHlsZShwcm9wcy5zdHlsZSkpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuQW5pbWF0ZWQuaW5qZWN0LkFwcGx5QW5pbWF0ZWRWYWx1ZXMoQXBwbHlBbmltYXRlZFZhbHVlcyk7XG5BbmltYXRlZC5pbmplY3QuRmxhdHRlblN0eWxlKGZsYXR0ZW5TdHlsZSk7XG4vKiBlc2xpbnQtZW5hYmxlICovXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgLi4uQW5pbWF0ZWQsXG4gIFZpZXc6IEFuaW1hdGVkLmNyZWF0ZUFuaW1hdGVkQ29tcG9uZW50KFZpZXcpLFxuICBUZXh0OiBBbmltYXRlZC5jcmVhdGVBbmltYXRlZENvbXBvbmVudChUZXh0KSxcbiAgSW1hZ2U6IEFuaW1hdGVkLmNyZWF0ZUFuaW1hdGVkQ29tcG9uZW50KEltYWdlKSxcbn07XG4iXX0=