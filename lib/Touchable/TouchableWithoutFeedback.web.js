







'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();

require('../PanResponder/PanResponder.web');
var _react=require('react');var _react2=_interopRequireDefault(_react);
var _ReactTouchable=require('./Touchable');var _ReactTouchable2=_interopRequireDefault(_ReactTouchable);
var _reactMixin=require('react-mixin');var _reactMixin2=_interopRequireDefault(_reactMixin);
var _autobindDecorator=require('autobind-decorator');var _autobindDecorator2=_interopRequireDefault(_autobindDecorator);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}







var PRESS_RECT_OFFSET={
top:20,
left:20,
right:20,
bottom:30};var







TouchableWithoutFeedback=function(_Component){_inherits(TouchableWithoutFeedback,_Component);function TouchableWithoutFeedback(){var _ref;var _temp,_this,_ret;_classCallCheck(this,TouchableWithoutFeedback);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=TouchableWithoutFeedback.__proto__||Object.getPrototypeOf(TouchableWithoutFeedback)).call.apply(_ref,[this].concat(args))),_this),_this.



























state=_this.touchableGetInitialState(),_temp),_possibleConstructorReturn(_this,_ret);}_createClass(TouchableWithoutFeedback,[{key:'componentWillReceiveProps',value:function componentWillReceiveProps(





nextProps){

}},{key:'touchableHandlePress',value:function touchableHandlePress(





e){
var touchBank=e.touchHistory.touchBank[e.touchHistory.indexOfSingleActiveTouch];
if(touchBank){
var offset=Math.sqrt(Math.pow(touchBank.startPageX-touchBank.currentPageX,2)+
Math.pow(touchBank.startPageY-touchBank.currentPageY,2));
var velocity=offset/(touchBank.currentTimeStamp-touchBank.startTimeStamp)*1000;
if(velocity<100)this.props.onPress&&this.props.onPress(e);
}else{
this.props.onPress&&this.props.onPress(e);
}
}},{key:'touchableHandleActivePressIn',value:function touchableHandleActivePressIn(

e){
this.props.onPressIn&&this.props.onPressIn(e);
}},{key:'touchableHandleActivePressOut',value:function touchableHandleActivePressOut(

e){
this.props.onPressOut&&this.props.onPressOut(e);
}},{key:'touchableHandleLongPress',value:function touchableHandleLongPress(

e){
this.props.onLongPress&&this.props.onLongPress(e);
}},{key:'touchableGetPressRectOffset',value:function touchableGetPressRectOffset()

{
return PRESS_RECT_OFFSET;
}},{key:'touchableGetHighlightDelayMS',value:function touchableGetHighlightDelayMS()

{
return this.props.delayPressIn||0;
}},{key:'touchableGetLongPressDelayMS',value:function touchableGetLongPressDelayMS()

{
return this.props.delayLongPress===0?0:
this.props.delayLongPress||500;
}},{key:'touchableGetPressOutDelayMS',value:function touchableGetPressOutDelayMS()

{
return this.props.delayPressOut||0;
}},{key:'render',value:function render()

{

return _react2.default.cloneElement(_react2.default.Children.only(this.props.children),{
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate});

}}]);return TouchableWithoutFeedback;}(_react.Component);TouchableWithoutFeedback.propTypes={onPress:_react2.default.PropTypes.func,onPressIn:_react2.default.PropTypes.func,onPressOut:_react2.default.PropTypes.func,onLongPress:_react2.default.PropTypes.func,delayPressIn:_react2.default.PropTypes.number,delayPressOut:_react2.default.PropTypes.number,delayLongPress:_react2.default.PropTypes.number};

;

_reactMixin2.default.onClass(TouchableWithoutFeedback,_ReactTouchable2.default.Mixin);
(0,_autobindDecorator2.default)(TouchableWithoutFeedback);

module.exports=TouchableWithoutFeedback;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRvdWNoYWJsZVdpdGhvdXRGZWVkYmFjay53ZWIuanMiXSwibmFtZXMiOlsiUFJFU1NfUkVDVF9PRkZTRVQiLCJ0b3AiLCJsZWZ0IiwicmlnaHQiLCJib3R0b20iLCJUb3VjaGFibGVXaXRob3V0RmVlZGJhY2siLCJzdGF0ZSIsInRvdWNoYWJsZUdldEluaXRpYWxTdGF0ZSIsIm5leHRQcm9wcyIsImUiLCJ0b3VjaEJhbmsiLCJ0b3VjaEhpc3RvcnkiLCJpbmRleE9mU2luZ2xlQWN0aXZlVG91Y2giLCJvZmZzZXQiLCJNYXRoIiwic3FydCIsInBvdyIsInN0YXJ0UGFnZVgiLCJjdXJyZW50UGFnZVgiLCJzdGFydFBhZ2VZIiwiY3VycmVudFBhZ2VZIiwidmVsb2NpdHkiLCJjdXJyZW50VGltZVN0YW1wIiwic3RhcnRUaW1lU3RhbXAiLCJwcm9wcyIsIm9uUHJlc3MiLCJvblByZXNzSW4iLCJvblByZXNzT3V0Iiwib25Mb25nUHJlc3MiLCJkZWxheVByZXNzSW4iLCJkZWxheUxvbmdQcmVzcyIsImRlbGF5UHJlc3NPdXQiLCJjbG9uZUVsZW1lbnQiLCJDaGlsZHJlbiIsIm9ubHkiLCJjaGlsZHJlbiIsIm9uU3RhcnRTaG91bGRTZXRSZXNwb25kZXIiLCJ0b3VjaGFibGVIYW5kbGVTdGFydFNob3VsZFNldFJlc3BvbmRlciIsIm9uUmVzcG9uZGVyVGVybWluYXRpb25SZXF1ZXN0IiwidG91Y2hhYmxlSGFuZGxlUmVzcG9uZGVyVGVybWluYXRpb25SZXF1ZXN0Iiwib25SZXNwb25kZXJHcmFudCIsInRvdWNoYWJsZUhhbmRsZVJlc3BvbmRlckdyYW50Iiwib25SZXNwb25kZXJNb3ZlIiwidG91Y2hhYmxlSGFuZGxlUmVzcG9uZGVyTW92ZSIsIm9uUmVzcG9uZGVyUmVsZWFzZSIsInRvdWNoYWJsZUhhbmRsZVJlc3BvbmRlclJlbGVhc2UiLCJvblJlc3BvbmRlclRlcm1pbmF0ZSIsInRvdWNoYWJsZUhhbmRsZVJlc3BvbmRlclRlcm1pbmF0ZSIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsImZ1bmMiLCJudW1iZXIiLCJvbkNsYXNzIiwiTWl4aW4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQVFBLGE7O0FBRUE7QUFDQSw0QjtBQUNBLDJDO0FBQ0EsdUM7QUFDQSxxRDs7Ozs7Ozs7QUFRQSxHQUFJQSxtQkFBb0I7QUFDdEJDLElBQUssRUFEaUI7QUFFdEJDLEtBQU0sRUFGZ0I7QUFHdEJDLE1BQU8sRUFIZTtBQUl0QkMsT0FBUSxFQUpjLENBQXhCLEM7Ozs7Ozs7O0FBWU1DLHdCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNEJKQyxLLENBQVEsTUFBS0Msd0JBQUwsRTs7Ozs7O0FBTWtCQyxTLENBQW1COztBQUU1QyxDOzs7Ozs7QUFNb0JDLEMsQ0FBVTtBQUM3QixHQUFJQyxXQUFZRCxFQUFFRSxZQUFGLENBQWVELFNBQWYsQ0FBeUJELEVBQUVFLFlBQUYsQ0FBZUMsd0JBQXhDLENBQWhCO0FBQ0EsR0FBSUYsU0FBSixDQUFlO0FBQ2IsR0FBSUcsUUFBU0MsS0FBS0MsSUFBTCxDQUFVRCxLQUFLRSxHQUFMLENBQVNOLFVBQVVPLFVBQVYsQ0FBdUJQLFVBQVVRLFlBQTFDLENBQXdELENBQXhEO0FBQ2pCSixLQUFLRSxHQUFMLENBQVNOLFVBQVVTLFVBQVYsQ0FBdUJULFVBQVVVLFlBQTFDLENBQXdELENBQXhELENBRE8sQ0FBYjtBQUVBLEdBQUlDLFVBQVlSLFFBQVVILFVBQVVZLGdCQUFWLENBQTZCWixVQUFVYSxjQUFqRCxDQUFELENBQXFFLElBQXBGO0FBQ0EsR0FBSUYsU0FBVyxHQUFmLENBQW9CLEtBQUtHLEtBQUwsQ0FBV0MsT0FBWCxFQUFzQixLQUFLRCxLQUFMLENBQVdDLE9BQVgsQ0FBbUJoQixDQUFuQixDQUF0QjtBQUNyQixDQUxELElBS087QUFDTCxLQUFLZSxLQUFMLENBQVdDLE9BQVgsRUFBc0IsS0FBS0QsS0FBTCxDQUFXQyxPQUFYLENBQW1CaEIsQ0FBbkIsQ0FBdEI7QUFDRDtBQUNGLEM7O0FBRTRCQSxDLENBQVU7QUFDckMsS0FBS2UsS0FBTCxDQUFXRSxTQUFYLEVBQXdCLEtBQUtGLEtBQUwsQ0FBV0UsU0FBWCxDQUFxQmpCLENBQXJCLENBQXhCO0FBQ0QsQzs7QUFFNkJBLEMsQ0FBVTtBQUN0QyxLQUFLZSxLQUFMLENBQVdHLFVBQVgsRUFBeUIsS0FBS0gsS0FBTCxDQUFXRyxVQUFYLENBQXNCbEIsQ0FBdEIsQ0FBekI7QUFDRCxDOztBQUV3QkEsQyxDQUFVO0FBQ2pDLEtBQUtlLEtBQUwsQ0FBV0ksV0FBWCxFQUEwQixLQUFLSixLQUFMLENBQVdJLFdBQVgsQ0FBdUJuQixDQUF2QixDQUExQjtBQUNELEM7O0FBRXVEO0FBQ3RELE1BQU9ULGtCQUFQO0FBQ0QsQzs7QUFFc0M7QUFDckMsTUFBTyxNQUFLd0IsS0FBTCxDQUFXSyxZQUFYLEVBQTJCLENBQWxDO0FBQ0QsQzs7QUFFc0M7QUFDckMsTUFBTyxNQUFLTCxLQUFMLENBQVdNLGNBQVgsR0FBOEIsQ0FBOUIsQ0FBa0MsQ0FBbEM7QUFDTCxLQUFLTixLQUFMLENBQVdNLGNBQVgsRUFBNkIsR0FEL0I7QUFFRCxDOztBQUVxQztBQUNwQyxNQUFPLE1BQUtOLEtBQUwsQ0FBV08sYUFBWCxFQUE0QixDQUFuQztBQUNELEM7O0FBRXNCOztBQUVyQixNQUFPLGlCQUFhQyxZQUFiLENBQTBCLGdCQUFNQyxRQUFOLENBQWVDLElBQWYsQ0FBb0IsS0FBS1YsS0FBTCxDQUFXVyxRQUEvQixDQUExQixDQUFvRTtBQUN6RUMsMEJBQTJCLEtBQUtDLHNDQUR5QztBQUV6RUMsOEJBQStCLEtBQUtDLDBDQUZxQztBQUd6RUMsaUJBQWtCLEtBQUtDLDZCQUhrRDtBQUl6RUMsZ0JBQWlCLEtBQUtDLDRCQUptRDtBQUt6RUMsbUJBQW9CLEtBQUtDLCtCQUxnRDtBQU16RUMscUJBQXNCLEtBQUtDLGlDQU44QyxDQUFwRSxDQUFQOztBQVFELEMsd0RBN0ZHMUMsd0IsQ0FHRzJDLFMsQ0FBWSxDQUtqQnZCLFFBQVMsZ0JBQU13QixTQUFOLENBQWdCQyxJQUxSLENBTWpCeEIsVUFBVyxnQkFBTXVCLFNBQU4sQ0FBZ0JDLElBTlYsQ0FPakJ2QixXQUFZLGdCQUFNc0IsU0FBTixDQUFnQkMsSUFQWCxDQVNqQnRCLFlBQWEsZ0JBQU1xQixTQUFOLENBQWdCQyxJQVRaLENBY2pCckIsYUFBYyxnQkFBTW9CLFNBQU4sQ0FBZ0JFLE1BZGIsQ0FrQmpCcEIsY0FBZSxnQkFBTWtCLFNBQU4sQ0FBZ0JFLE1BbEJkLENBc0JqQnJCLGVBQWdCLGdCQUFNbUIsU0FBTixDQUFnQkUsTUF0QmYsQzs7QUE0RnBCOztBQUVELHFCQUFNQyxPQUFOLENBQWMvQyx3QkFBZCxDQUF3Qyx5QkFBVWdELEtBQWxEO0FBQ0EsZ0NBQVNoRCx3QkFBVDs7QUFFQWlELE9BQU9DLE9BQVAsQ0FBaUJsRCx3QkFBakIiLCJmaWxlIjoiVG91Y2hhYmxlV2l0aG91dEZlZWRiYWNrLndlYi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEFsaWJhYmEgR3JvdXAgSG9sZGluZyBMaW1pdGVkLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUsIEZhY2Vib29rLCBJbmMuICBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBSZWFjdFRvdWNoYWJsZVdpdGhvdXRGZWVkYmFja1xuICovXG4ndXNlIHN0cmljdCc7XG5cbmltcG9ydCAnUmVhY3RQYW5SZXNwb25kZXInO1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBUb3VjaGFibGUgZnJvbSAnUmVhY3RUb3VjaGFibGUnO1xuaW1wb3J0IG1peGluIGZyb20gJ3JlYWN0LW1peGluJztcbmltcG9ydCBhdXRvYmluZCBmcm9tICdhdXRvYmluZC1kZWNvcmF0b3InO1xuXG4vKipcbiAqIFdoZW4gdGhlIHNjcm9sbCB2aWV3IGlzIGRpc2FibGVkLCB0aGlzIGRlZmluZXMgaG93IGZhciB5b3VyIHRvdWNoIG1heSBtb3ZlXG4gKiBvZmYgb2YgdGhlIGJ1dHRvbiwgYmVmb3JlIGRlYWN0aXZhdGluZyB0aGUgYnV0dG9uLiBPbmNlIGRlYWN0aXZhdGVkLCB0cnlcbiAqIG1vdmluZyBpdCBiYWNrIGFuZCB5b3UnbGwgc2VlIHRoYXQgdGhlIGJ1dHRvbiBpcyBvbmNlIGFnYWluIHJlYWN0aXZhdGVkIVxuICogTW92ZSBpdCBiYWNrIGFuZCBmb3J0aCBzZXZlcmFsIHRpbWVzIHdoaWxlIHRoZSBzY3JvbGwgdmlldyBpcyBkaXNhYmxlZC5cbiAqL1xudmFyIFBSRVNTX1JFQ1RfT0ZGU0VUID0ge1xuICB0b3A6IDIwLFxuICBsZWZ0OiAyMCxcbiAgcmlnaHQ6IDIwLFxuICBib3R0b206IDMwXG59O1xuXG4vKipcbiAqIERvIG5vdCB1c2UgdW5sZXNzIHlvdSBoYXZlIGEgdmVyeSBnb29kIHJlYXNvbi4gQWxsIHRoZSBlbGVtZW50cyB0aGF0XG4gKiByZXNwb25kIHRvIHByZXNzIHNob3VsZCBoYXZlIGEgdmlzdWFsIGZlZWRiYWNrIHdoZW4gdG91Y2hlZC4gVGhpcyBpc1xuICogb25lIG9mIHRoZSBwcmltYXJ5IHJlYXNvbiBhIFwid2ViXCIgYXBwIGRvZXNuJ3QgZmVlbCBcIm5hdGl2ZVwiLlxuICovXG5jbGFzcyBUb3VjaGFibGVXaXRob3V0RmVlZGJhY2sgZXh0ZW5kcyBDb21wb25lbnQge1xuXG5cbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAvKipcbiAgICAgKiBDYWxsZWQgd2hlbiB0aGUgdG91Y2ggaXMgcmVsZWFzZWQsIGJ1dCBub3QgaWYgY2FuY2VsbGVkIChlLmcuIGJ5IGEgc2Nyb2xsXG4gICAgICogdGhhdCBzdGVhbHMgdGhlIHJlc3BvbmRlciBsb2NrKS5cbiAgICAgKi9cbiAgICBvblByZXNzOiBSZWFjdC5Qcm9wVHlwZXMuZnVuYyxcbiAgICBvblByZXNzSW46IFJlYWN0LlByb3BUeXBlcy5mdW5jLFxuICAgIG9uUHJlc3NPdXQ6IFJlYWN0LlByb3BUeXBlcy5mdW5jLFxuXG4gICAgb25Mb25nUHJlc3M6IFJlYWN0LlByb3BUeXBlcy5mdW5jLFxuXG4gICAgLyoqXG4gICAgICogRGVsYXkgaW4gbXMsIGZyb20gdGhlIHN0YXJ0IG9mIHRoZSB0b3VjaCwgYmVmb3JlIG9uUHJlc3NJbiBpcyBjYWxsZWQuXG4gICAgICovXG4gICAgZGVsYXlQcmVzc0luOiBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyLFxuICAgIC8qKlxuICAgICAqIERlbGF5IGluIG1zLCBmcm9tIHRoZSByZWxlYXNlIG9mIHRoZSB0b3VjaCwgYmVmb3JlIG9uUHJlc3NPdXQgaXMgY2FsbGVkLlxuICAgICAqL1xuICAgIGRlbGF5UHJlc3NPdXQ6IFJlYWN0LlByb3BUeXBlcy5udW1iZXIsXG4gICAgLyoqXG4gICAgICogRGVsYXkgaW4gbXMsIGZyb20gb25QcmVzc0luLCBiZWZvcmUgb25Mb25nUHJlc3MgaXMgY2FsbGVkLlxuICAgICAqL1xuICAgIGRlbGF5TG9uZ1ByZXNzOiBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyLFxuICB9XG5cbiAgc3RhdGUgPSB0aGlzLnRvdWNoYWJsZUdldEluaXRpYWxTdGF0ZSgpXG5cbiAgLy8gY29tcG9uZW50RGlkTW91bnQ6IGZ1bmN0aW9uKCkge1xuICAgIC8vIGVuc3VyZVBvc2l0aXZlRGVsYXlQcm9wcyh0aGlzLnByb3BzKTtcbiAgLy8gfSxcblxuICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wczogT2JqZWN0KSB7XG4gICAgLy8gZW5zdXJlUG9zaXRpdmVEZWxheVByb3BzKG5leHRQcm9wcyk7XG4gIH1cblxuICAvKipcbiAgICogYFRvdWNoYWJsZS5NaXhpbmAgc2VsZiBjYWxsYmFja3MuIFRoZSBtaXhpbiB3aWxsIGludm9rZSB0aGVzZSBpZiB0aGV5IGFyZVxuICAgKiBkZWZpbmVkIG9uIHlvdXIgY29tcG9uZW50LlxuICAgKi9cbiAgdG91Y2hhYmxlSGFuZGxlUHJlc3MoZTogRXZlbnQpIHtcbiAgICB2YXIgdG91Y2hCYW5rID0gZS50b3VjaEhpc3RvcnkudG91Y2hCYW5rW2UudG91Y2hIaXN0b3J5LmluZGV4T2ZTaW5nbGVBY3RpdmVUb3VjaF07XG4gICAgaWYgKHRvdWNoQmFuaykge1xuICAgICAgdmFyIG9mZnNldCA9IE1hdGguc3FydChNYXRoLnBvdyh0b3VjaEJhbmsuc3RhcnRQYWdlWCAtIHRvdWNoQmFuay5jdXJyZW50UGFnZVgsIDIpXG4gICAgICAgICAgKyBNYXRoLnBvdyh0b3VjaEJhbmsuc3RhcnRQYWdlWSAtIHRvdWNoQmFuay5jdXJyZW50UGFnZVksIDIpKTtcbiAgICAgIHZhciB2ZWxvY2l0eSA9IChvZmZzZXQgLyAodG91Y2hCYW5rLmN1cnJlbnRUaW1lU3RhbXAgLSB0b3VjaEJhbmsuc3RhcnRUaW1lU3RhbXApKSAqIDEwMDA7XG4gICAgICBpZiAodmVsb2NpdHkgPCAxMDApIHRoaXMucHJvcHMub25QcmVzcyAmJiB0aGlzLnByb3BzLm9uUHJlc3MoZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucHJvcHMub25QcmVzcyAmJiB0aGlzLnByb3BzLm9uUHJlc3MoZSk7XG4gICAgfVxuICB9XG5cbiAgdG91Y2hhYmxlSGFuZGxlQWN0aXZlUHJlc3NJbihlOiBFdmVudCkge1xuICAgIHRoaXMucHJvcHMub25QcmVzc0luICYmIHRoaXMucHJvcHMub25QcmVzc0luKGUpO1xuICB9XG5cbiAgdG91Y2hhYmxlSGFuZGxlQWN0aXZlUHJlc3NPdXQoZTogRXZlbnQpIHtcbiAgICB0aGlzLnByb3BzLm9uUHJlc3NPdXQgJiYgdGhpcy5wcm9wcy5vblByZXNzT3V0KGUpO1xuICB9XG5cbiAgdG91Y2hhYmxlSGFuZGxlTG9uZ1ByZXNzKGU6IEV2ZW50KSB7XG4gICAgdGhpcy5wcm9wcy5vbkxvbmdQcmVzcyAmJiB0aGlzLnByb3BzLm9uTG9uZ1ByZXNzKGUpO1xuICB9XG5cbiAgdG91Y2hhYmxlR2V0UHJlc3NSZWN0T2Zmc2V0KCk6IHR5cGVvZiBQUkVTU19SRUNUX09GRlNFVCB7XG4gICAgcmV0dXJuIFBSRVNTX1JFQ1RfT0ZGU0VUOyAvLyBBbHdheXMgbWFrZSBzdXJlIHRvIHByZWRlY2xhcmUgYSBjb25zdGFudCFcbiAgfVxuXG4gIHRvdWNoYWJsZUdldEhpZ2hsaWdodERlbGF5TVMoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5wcm9wcy5kZWxheVByZXNzSW4gfHwgMDtcbiAgfVxuXG4gIHRvdWNoYWJsZUdldExvbmdQcmVzc0RlbGF5TVMoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5wcm9wcy5kZWxheUxvbmdQcmVzcyA9PT0gMCA/IDAgOlxuICAgICAgdGhpcy5wcm9wcy5kZWxheUxvbmdQcmVzcyB8fCA1MDA7XG4gIH1cblxuICB0b3VjaGFibGVHZXRQcmVzc091dERlbGF5TVMoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5wcm9wcy5kZWxheVByZXNzT3V0IHx8IDA7XG4gIH1cblxuICByZW5kZXIoKTogUmVhY3RFbGVtZW50IHtcbiAgICAvLyBOb3RlKGF2aWspOiByZW1vdmUgZHluYW1pYyB0eXBlY2FzdCBvbmNlIEZsb3cgaGFzIGJlZW4gdXBncmFkZWRcbiAgICByZXR1cm4gKFJlYWN0OiBhbnkpLmNsb25lRWxlbWVudChSZWFjdC5DaGlsZHJlbi5vbmx5KHRoaXMucHJvcHMuY2hpbGRyZW4pLCB7XG4gICAgICBvblN0YXJ0U2hvdWxkU2V0UmVzcG9uZGVyOiB0aGlzLnRvdWNoYWJsZUhhbmRsZVN0YXJ0U2hvdWxkU2V0UmVzcG9uZGVyLFxuICAgICAgb25SZXNwb25kZXJUZXJtaW5hdGlvblJlcXVlc3Q6IHRoaXMudG91Y2hhYmxlSGFuZGxlUmVzcG9uZGVyVGVybWluYXRpb25SZXF1ZXN0LFxuICAgICAgb25SZXNwb25kZXJHcmFudDogdGhpcy50b3VjaGFibGVIYW5kbGVSZXNwb25kZXJHcmFudCxcbiAgICAgIG9uUmVzcG9uZGVyTW92ZTogdGhpcy50b3VjaGFibGVIYW5kbGVSZXNwb25kZXJNb3ZlLFxuICAgICAgb25SZXNwb25kZXJSZWxlYXNlOiB0aGlzLnRvdWNoYWJsZUhhbmRsZVJlc3BvbmRlclJlbGVhc2UsXG4gICAgICBvblJlc3BvbmRlclRlcm1pbmF0ZTogdGhpcy50b3VjaGFibGVIYW5kbGVSZXNwb25kZXJUZXJtaW5hdGVcbiAgICB9KTtcbiAgfVxuXG59O1xuXG5taXhpbi5vbkNsYXNzKFRvdWNoYWJsZVdpdGhvdXRGZWVkYmFjaywgVG91Y2hhYmxlLk1peGluKTtcbmF1dG9iaW5kKFRvdWNoYWJsZVdpdGhvdXRGZWVkYmFjayk7XG5cbm1vZHVsZS5leHBvcnRzID0gVG91Y2hhYmxlV2l0aG91dEZlZWRiYWNrO1xuIl19