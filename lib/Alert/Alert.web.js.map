{"version":3,"sources":["Alert.web.js"],"names":["DEFAULT_BUTTON_TEXT","DEFAULT_BUTTON","text","onPress","noop","AlertIOS","title","message","buttons","type","callbacks","buttonsSpec","forEach","btn","index","btnDef","push","confirmCallback","pop","cancelCallback","length","alert","confirm","Error","value","callback","arguments","undefined","ret","prompt"],"mappings":"AAQA,a,wsBAEA,GAAMA,qBAAsB,IAA5B,CACA,GAAMC,gBAAiB,CACrBC,KAAMF,mBADe,CAErBG,QAAS,IAFY,CAAvB,CAKA,GAAMC,MAAO,QAAPA,KAAO,EAAW,CAAE,CAA1B,C,GAwBMC,S,iRAEFC,K,CACAC,O,CACAC,O,CAIAC,I,CACM,CACN,GAAIC,WAAY,EAAhB,CACA,GAAIC,aAAc,EAAlB,CACAL,MAAQA,OAAS,EAAjB,CACAC,QAAUA,SAAW,EAArB,CACAC,QAAUA,SAAW,CAACP,cAAD,CAArB,CACAQ,KAAOA,MAAQ,EAAf,CAEAD,QAAQI,OAAR,CAAgB,SAACC,GAAD,CAAMC,KAAN,CAAgB,CAC9BJ,UAAUI,KAAV,EAAmBD,IAAIV,OAAvB,CACA,GAAIY,QAAS,EAAb,CACAA,OAAOD,KAAP,EAAgBD,IAAIX,IAAJ,EAAYF,mBAA5B,CACAW,YAAYK,IAAZ,CAAiBD,MAAjB,EACD,CALD,EAOA,GAAME,iBAAkBP,UAAUQ,GAAV,IAAmBd,IAA3C,CACA,GAAMe,gBAAiBT,UAAUQ,GAAV,IAAmBd,IAA1C,CACA,GAAII,QAAQY,MAAR,GAAmB,CAAvB,CAA0B,CACxBC,MAAMf,KAAN,EACAW,kBACD,CAHD,IAGO,IAAIT,QAAQY,MAAR,GAAmB,CAAvB,CAA0B,CAC/B,GAAIE,QAAQhB,KAAR,CAAJ,CAAoB,CAClBW,kBACD,CAFD,IAEO,CACLE,iBACD,CACF,CANM,IAMA,CACL,KAAM,IAAII,MAAJ,CAAU,mEAAV,CAAN,CACD,CACF,C,gMAGCjB,K,CACAkB,K,CACAhB,O,CAIAiB,Q,CACM,CACN,GAAIC,UAAUN,MAAV,GAAqB,CAAzB,CAA4B,CAC1B,GAAI,MAAOI,MAAP,GAAiB,QAArB,CAA+B,CAC7BhB,QAAUgB,KAAV,CACAA,MAAQG,SAAR,CACD,CAHD,IAGO,IAAI,MAAOH,MAAP,GAAiB,UAArB,CAAiC,CACtCC,SAAWD,KAAX,CACAA,MAAQG,SAAR,CACD,CACF,CARD,IAQO,IAAID,UAAUN,MAAV,GAAqB,CAArB,EAA0B,MAAOZ,QAAP,GAAmB,UAAjD,CAA6D,CAClEiB,SAAWjB,OAAX,CACAA,QAAUmB,SAAV,CACD,CAED,GAAI,CAACnB,OAAL,CAAc,CACZA,QAAU,CAAC,CACTN,KAAM,QADG,CAAD,CAEP,CACDA,KAAM,IADL,CAEDC,QAASsB,QAFR,CAFO,CAAV,CAMD,CAED,GAAIG,KAAMC,OAAOvB,KAAP,CAAV,CACA,GAAIsB,KAAOH,QAAX,CAAqB,CACnBA,WACD,CACF,C,yCAGYpB,Q","file":"Alert.web.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Alibaba Group Holding Limited.\n * All rights reserved.\n *\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n */\n'use strict';\n\nconst DEFAULT_BUTTON_TEXT = 'OK';\nconst DEFAULT_BUTTON = {\n  text: DEFAULT_BUTTON_TEXT,\n  onPress: null,\n};\n\nconst noop = function() {};\n\n/**\n * Launches an alert dialog with the specified title and message.\n *\n * Optionally provide a list of buttons. Tapping any button will fire the\n * respective onPress callback and dismiss the alert. By default, the only\n * button will be an 'OK' button\n *\n * The last button in the list will be considered the 'Primary' button and\n * it will appear bold.\n *\n * ```\n * AlertIOS.alert(\n *   'Foo Title',\n *   'My Alert Msg',\n *   [\n *     {text: 'Foo', onPress: () => console.log('Foo Pressed!')},\n *     {text: 'Bar', onPress: () => console.log('Bar Pressed!')},\n *   ]\n * )\n * ```\n */\n\nclass AlertIOS {\n  static alert(\n    title: ?string,\n    message?: ?string,\n    buttons?: Array<{\n      text: ?string;\n      onPress?: ?Function;\n    }>,\n    type?: ?string\n  ): void {\n    let callbacks = [];\n    let buttonsSpec = [];\n    title = title || '';\n    message = message || '';\n    buttons = buttons || [DEFAULT_BUTTON];\n    type = type || '';\n\n    buttons.forEach((btn, index) => {\n      callbacks[index] = btn.onPress;\n      let btnDef = {};\n      btnDef[index] = btn.text || DEFAULT_BUTTON_TEXT;\n      buttonsSpec.push(btnDef);\n    });\n\n    const confirmCallback = callbacks.pop() || noop;\n    const cancelCallback = callbacks.pop() || noop;\n    if (buttons.length === 1) {\n      alert(title);\n      confirmCallback();\n    } else if (buttons.length === 2) {\n      if (confirm(title)) {\n        confirmCallback();\n      } else {\n        cancelCallback();\n      }\n    } else {\n      throw new Error('max two buttons supported: [negativeActionBtn, positiveActionBtn]');\n    }\n  }\n\n  static prompt(\n    title: string,\n    value?: string,\n    buttons?: Array<{\n      text: ?string;\n      onPress?: ?Function;\n    }>,\n    callback?: ?Function\n  ): void {\n    if (arguments.length === 2) {\n      if (typeof value === 'object') {\n        buttons = value;\n        value = undefined;\n      } else if (typeof value === 'function') {\n        callback = value;\n        value = undefined;\n      }\n    } else if (arguments.length === 3 && typeof buttons === 'function') {\n      callback = buttons;\n      buttons = undefined;\n    }\n\n    if (!buttons) {\n      buttons = [{\n        text: 'Cancel',\n      }, {\n        text: 'OK',\n        onPress: callback\n      }];\n    }\n\n    let ret = prompt(title);\n    if (ret && callback) {\n      callback();\n    }\n  }\n}\n\nexport default AlertIOS;\n"]}