{"version":3,"sources":["Modal.web.js"],"names":["Modal","props","visible","shown","onDismiss","transparent","modalBackgroundColor","backgroundColor","styles","modal","container","children","propTypes","animated","bool","func","create","position","left","right","bottom","top","zIndex"],"mappings":"AAMA,a,2pBAEA,4B,2CACA,gDACA,qC,mDACA,oF,y8BAEMA,M,uQACK,CACP,GAAI,KAAKC,KAAL,CAAWC,OAAX,GAAuB,KAA3B,CAAkC,CAChC,GAAI,KAAKC,KAAT,CAAgB,CACd,KAAKF,KAAL,CAAWG,SAAX,EAAwB,KAAKH,KAAL,CAAWG,SAAX,EAAxB,CACD,CACD,KAAKD,KAAL,CAAa,KAAb,CACA,MAAO,KAAP,CACD,CAED,KAAKA,KAAL,CAAa,IAAb,CAEA,GAAI,KAAKF,KAAL,CAAWI,WAAf,CAA4B,CAC1B,GAAIC,sBAAuB,CAACC,gBAAiB,aAAlB,CAA3B,CACD,CAED,MACE,qDAAM,MAAO,CAACC,OAAOC,KAAR,CAAeH,oBAAf,CAAb,iDACE,oDAAM,MAAO,CAACE,OAAOE,SAAR,CAAb,iDACG,KAAKT,KAAL,CAAWU,QADd,CADF,CADF,CAOD,C,qCAGHX,MAAMY,SAAN,CAAkB,CAChBC,SAAU,oBAAUC,IADJ,CAEhBT,YAAa,oBAAUS,IAFP,CAGhBV,UAAW,oBAAUW,IAHL,CAAlB,CAMA,GAAIP,QAAS,2BAAWQ,MAAX,CAAkB,CAC7BP,MAAO,CACLQ,SAAU,OADL,CAELC,KAAM,CAFD,CAGLC,MAAO,CAHF,CAILC,OAAQ,CAJH,CAKLC,IAAK,CALA,CAMLd,gBAAiB,MANZ,CAOLe,OAAQ,IAPH,CADsB,CAU7BZ,UAAW,CACTO,SAAU,UADD,CAETC,KAAM,CAFG,CAGTC,MAAO,CAHE,CAITC,OAAQ,CAJC,CAKTC,IAAK,CALI,CAVkB,CAAlB,CAAb,CAmBA,QAGErB,KAHF,OAAQ,iCAAmBA,KAAnB,CAAR,C,QAGEA,K,CAAAA,K","file":"Modal.web.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Alibaba Group Holding Limited.\n * All rights reserved.\n *\n * @providesModule ReactModal\n */\n'use strict';\n\nimport React, { Component } from 'react';\nimport { View, StyleSheet } from 'react-native-web';\nimport PropTypes from 'prop-types';\nimport applyNativeMethods from 'react-native-web/dist/modules/applyNativeMethods';\n\nclass Modal extends Component {\n  render() {\n    if (this.props.visible === false) {\n      if (this.shown) {\n        this.props.onDismiss && this.props.onDismiss();\n      }\n      this.shown = false;\n      return null;\n    }\n\n    this.shown = true;\n\n    if (this.props.transparent) {\n      var modalBackgroundColor = {backgroundColor: 'transparent'};\n    }\n\n    return (\n      <View style={[styles.modal, modalBackgroundColor]}>\n        <View style={[styles.container]}>\n          {this.props.children}\n        </View>\n      </View>\n    );\n  }\n}\n\nModal.propTypes = {\n  animated: PropTypes.bool,\n  transparent: PropTypes.bool,\n  onDismiss: PropTypes.func,\n};\n\nlet styles = StyleSheet.create({\n  modal: {\n    position: 'fixed',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n    backgroundColor: '#fff',\n    zIndex: 9999\n  },\n  container: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  }\n});\n\nModal = applyNativeMethods(Modal)\n\nexport {\n  Modal\n}\n"]}